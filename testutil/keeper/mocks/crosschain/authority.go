// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "github.com/cosmos/cosmos-sdk/types"
)

// CrosschainAuthorityKeeper is an autogenerated mock type for the CrosschainAuthorityKeeper type
type CrosschainAuthorityKeeper struct {
	mock.Mock
}

// IsAuthorized provides a mock function with given fields: ctx, msg
func (_m *CrosschainAuthorityKeeper) IsAuthorized(ctx types.Context, msg types.Msg) bool {
	ret := _m.Called(ctx, msg)

	if len(ret) == 0 {
		panic("no return value specified for IsAuthorized")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(types.Context, types.Msg) bool); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewCrosschainAuthorityKeeper creates a new instance of CrosschainAuthorityKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCrosschainAuthorityKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *CrosschainAuthorityKeeper {
	mock := &CrosschainAuthorityKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
