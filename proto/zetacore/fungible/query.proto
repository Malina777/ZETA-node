syntax = "proto3";
package zetacore.fungible;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "zetacore/fungible/params.proto";
import "zetacore/fungible/foreign_coins.proto";
import "zetacore/fungible/system_contract.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/zeta-chain/zetacore/x/fungible/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/zeta-chain/zetacore/fungible/params";
  }
  // Queries a ForeignCoins by index.
	rpc ForeignCoins(QueryGetForeignCoinsRequest) returns (QueryGetForeignCoinsResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/fungible/foreign_coins/{index}";
	}

	// Queries a list of ForeignCoins items.
	rpc ForeignCoinsAll(QueryAllForeignCoinsRequest) returns (QueryAllForeignCoinsResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/fungible/foreign_coins";
	}

// Queries a ZetaDepositAndCallContract by index.
	rpc SystemContract(QueryGetSystemContractRequest) returns (QueryGetSystemContractResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/fungible/system_contract";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetForeignCoinsRequest {
	  string index = 1;

}

message QueryGetForeignCoinsResponse {
	ForeignCoins foreignCoins = 1 [(gogoproto.nullable) = false];
}

message QueryAllForeignCoinsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllForeignCoinsResponse {
	repeated ForeignCoins foreignCoins = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSystemContractRequest {}

message QueryGetSystemContractResponse {
	SystemContract SystemContract = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
