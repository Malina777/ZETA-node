syntax = "proto3";
package zetachain.zetacore.zetacore;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "zetacore/tss_voter.proto";
import "zetacore/tss.proto";
import "zetacore/in_tx.proto";
import "zetacore/tx_list.proto";
import "zetacore/gas_balance.proto";
import "zetacore/gas_price.proto";
import "zetacore/chain_nonces.proto";
import "zetacore/last_block_height.proto";
import "zetacore/receive.proto";
import "zetacore/send.proto";
import "zetacore/node_account.proto";

option go_package = "github.com/zeta-chain/zetacore/x/zetacore/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a tSSVoter by index.
	rpc TSSVoter(QueryGetTSSVoterRequest) returns (QueryGetTSSVoterResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/zetacore/tSSVoter/{index}";
	}

	// Queries a list of tSSVoter items.
	rpc TSSVoterAll(QueryAllTSSVoterRequest) returns (QueryAllTSSVoterResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/zetacore/tSSVoter";
	}


	// Queries a tSS by index.
	rpc TSS(QueryGetTSSRequest) returns (QueryGetTSSResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/zetacore/tSS/{index}";
	}

	// Queries a list of tSS items.
	rpc TSSAll(QueryAllTSSRequest) returns (QueryAllTSSResponse) {
		option (google.api.http).get = "/zeta-chain/zetacore/zetacore/tSS";
	}


	// Queries a list of txListRich items.
	rpc TxListRich(QueryTxListRichRequest) returns (QueryTxListRichResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/txListRich";
	}


	// Queries a inTx by index.
	rpc InTx(QueryGetInTxRequest) returns (QueryGetInTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/inTx/{index}";
	}

	// Queries a inTx by index.
	rpc InTxNS(QueryGetInTxRequest) returns (QueryGetInTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/inTxNS/{index}";
	}

	// Queries a inTx by index.
	rpc InTxRich(QueryGetInTxRichRequest) returns (QueryGetInTxRichResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/inTxRich/{index}";
	}

	// Queries a list of inTx items.
	rpc InTxAll(QueryAllInTxRequest) returns (QueryAllInTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/inTx";
	}


	// Queries a txList by index.
	rpc TxList(QueryGetTxRequest) returns (QueryGetTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/txList";
	}


	// Queries a gasBalance by index.
	rpc GasBalance(QueryGetGasBalanceRequest) returns (QueryGetGasBalanceResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/gasBalance/{index}";
	}

	// Queries a list of gasBalance items.
	rpc GasBalanceAll(QueryAllGasBalanceRequest) returns (QueryAllGasBalanceResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/gasBalance";
	}


	// Queries a gasPrice by index.
	rpc GasPrice(QueryGetGasPriceRequest) returns (QueryGetGasPriceResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/gasPrice/{index}";
	}

	// Queries a list of gasPrice items.
	rpc GasPriceAll(QueryAllGasPriceRequest) returns (QueryAllGasPriceResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/gasPrice";
	}


	// Queries a chainNonces by index.
	rpc ChainNonces(QueryGetChainNoncesRequest) returns (QueryGetChainNoncesResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/chainNonces/{index}";
	}

	// Queries a list of chainNonces items.
	rpc ChainNoncesAll(QueryAllChainNoncesRequest) returns (QueryAllChainNoncesResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/chainNonces";
	}


	// Queries a lastBlockHeight by index.
	rpc LastBlockHeight(QueryGetLastBlockHeightRequest) returns (QueryGetLastBlockHeightResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/lastBlockHeight/{index}";
	}

	// Queries a list of lastBlockHeight items.
	rpc LastBlockHeightAll(QueryAllLastBlockHeightRequest) returns (QueryAllLastBlockHeightResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/lastBlockHeight";
	}


	// Queries a receive by index.
	rpc Receive(QueryGetReceiveRequest) returns (QueryGetReceiveResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/receive/{index}";
	}

	// Queries a list of receive items.
	rpc ReceiveAll(QueryAllReceiveRequest) returns (QueryAllReceiveResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/receive";
	}


	// Queries a send by index.
	rpc Send(QueryGetSendRequest) returns (QueryGetSendResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/send/{index}";
	}

	// Queries a list of send items.
	rpc SendAll(QueryAllSendRequest) returns (QueryAllSendResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/send";
	}

	// Queries a list of send items.
	rpc SendAllPending(QueryAllSendPendingRequest) returns (QueryAllSendPendingResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/sendPending";
	}


	// Queries a nodeAccount by index.
	rpc NodeAccount(QueryGetNodeAccountRequest) returns (QueryGetNodeAccountResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/nodeAccount/{index}";
	}

	// Queries a list of nodeAccount items.
	rpc NodeAccountAll(QueryAllNodeAccountRequest) returns (QueryAllNodeAccountResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/nodeAccount";
	}


	// Queries a list of lastMetaHeight items.
	rpc LastMetaHeight(QueryLastMetaHeightRequest) returns (QueryLastMetaHeightResponse) {
		option (google.api.http).get = "/Meta-Protocol/zetacore/zetacore/lastMetaHeight";
	}



}

// this line is used by starport scaffolding # 3
message QueryGetTSSVoterRequest {
	string index = 1;
}

message QueryGetTSSVoterResponse {
	TSSVoter TSSVoter = 1;
}

message QueryAllTSSVoterRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTSSVoterResponse {
	repeated TSSVoter TSSVoter = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetTSSRequest {
	string index = 1;
}

message QueryGetTSSResponse {
	TSS TSS = 1;
}

message QueryAllTSSRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTSSResponse {
	repeated TSS TSS = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryTxListRichRequest {
  uint64 last = 1;
}

message QueryTxListRichResponse {
	repeated Send tx = 1;
	uint64 length = 2; 
}

message QueryGetInTxRequest {
	string index = 1;
}

message QueryGetInTxResponse {
	InTx InTx = 1;
}

message QueryGetInTxRichRequest {
	string index = 1;
}

message QueryGetInTxRichResponse {
	Send tx = 1;
}

message QueryAllInTxRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInTxResponse {
	repeated InTx InTx = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetTxRequest {
	int64 from = 1;
	int64 to = 2;
	int64 last = 3; 
}

message QueryGetTxResponse {
	repeated Tx tx = 1;
	int64 length = 2;
}
message QueryGetGasBalanceRequest {
	string index = 1;
}

message QueryGetGasBalanceResponse {
	GasBalance GasBalance = 1;
}

message QueryAllGasBalanceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGasBalanceResponse {
	repeated GasBalance GasBalance = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetGasPriceRequest {
	string index = 1;
}

message QueryGetGasPriceResponse {
	GasPrice GasPrice = 1;
}

message QueryAllGasPriceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGasPriceResponse {
	repeated GasPrice GasPrice = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetChainNoncesRequest {
	string index = 1;
}

message QueryGetChainNoncesResponse {
	ChainNonces ChainNonces = 1;
}

message QueryAllChainNoncesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllChainNoncesResponse {
	repeated ChainNonces ChainNonces = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetLastBlockHeightRequest {
	string index = 1;
}

message QueryGetLastBlockHeightResponse {
	LastBlockHeight LastBlockHeight = 1;
}

message QueryAllLastBlockHeightRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLastBlockHeightResponse {
	repeated LastBlockHeight LastBlockHeight = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetReceiveRequest {
	string index = 1;
}

message QueryGetReceiveResponse {
	Receive Receive = 1;
}

message QueryAllReceiveRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReceiveResponse {
	repeated Receive Receive = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetSendRequest {
	string index = 1;
}

message QueryGetSendResponse {
	Send Send = 1;
}

message QueryAllSendRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSendResponse {
	repeated Send Send = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllSendPendingRequest {

}

message QueryAllSendPendingResponse {
	repeated Send Send = 1;
}

message QueryGetNodeAccountRequest {
	string index = 1;
}

message QueryGetNodeAccountResponse {
	NodeAccount NodeAccount = 1;
}

message QueryAllNodeAccountRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNodeAccountResponse {
	repeated NodeAccount NodeAccount = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryLastMetaHeightRequest {
}

message QueryLastMetaHeightResponse {
	uint64 Height = 1;
}
