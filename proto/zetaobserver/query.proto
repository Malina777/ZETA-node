syntax = "proto3";
package zetachain.zetacore.zetaobserver;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";
import "zetaobserver/params.proto";

option go_package = "github.com/zeta-chain/zetacore/x/zetaobserver/types";

// Query defines the gRPC querier service.
service Query {
	// Parameters queries the parameters of the module.
	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
		option (google.api.http).get = "/zetachain/zetaobserver/params";
	}
	// this line is used by starport scaffolding # 2
}

message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
	// params holds all the parameters of this module.
	Params params = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
