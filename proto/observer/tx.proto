syntax = "proto3";
package zetachain.zetacore.observer;

import "common/common.proto";
import "gogoproto/gogo.proto";
import "observer/blame.proto";
import "observer/observer.proto";
import "observer/params.proto";
import "observer/headers.proto";

option go_package = "github.com/zeta-chain/zetacore/x/observer/types";

// Msg defines the Msg service.
service Msg {
  rpc AddObserver(MsgAddObserver) returns (MsgAddObserverResponse);
  rpc UpdateCoreParams(MsgUpdateCoreParams) returns (MsgUpdateCoreParamsResponse);
  rpc AddBlameVote(MsgAddBlameVote) returns (MsgAddBlameVoteResponse);
  rpc UpdatePermissionFlags(MsgUpdatePermissionFlags) returns (MsgUpdatePermissionFlagsResponse);
  rpc UpdateKeygen(MsgUpdateKeygen) returns (MsgUpdateKeygenResponse);
  rpc AddBlockHeader(MsgAddBlockHeader) returns (MsgAddBlockHeaderResponse);
}

message MsgAddBlockHeader {
    string creator = 1;
    int64 chain_id = 2;
    bytes tx_hash = 3;
    bytes block_header = 4;
    int64 height = 5;
}

message MsgAddBlockHeaderResponse {}

message MsgUpdateCoreParams {
  string creator = 1;
  CoreParams coreParams = 2;
}

message MsgUpdateCoreParamsResponse {}

message MsgAddObserver {
  string creator = 1;
  int64 chain_id = 2;
  ObservationType observationType = 3;
}

message MsgAddObserverResponse {}

message MsgAddBlameVote {
  string creator = 1;
  int64 chain_id = 2;
  Blame blame_info = 3;
}

message MsgAddBlameVoteResponse {}
message MsgUpdatePermissionFlags {
  string creator = 1;
  bool isInboundEnabled = 3;
}
message MsgUpdatePermissionFlagsResponse {}

message MsgUpdateKeygen {
  string creator = 1;
  int64 block = 2;
}

message MsgUpdateKeygenResponse {}
