syntax = "proto3";
package MetaProtocol.metacore.metacore;

// this line is used by starport scaffolding # proto/tx/import
import "metacore/send.proto";
import "metacore/txin_voter.proto";
import "common/common.proto";

option go_package = "github.com/Meta-Protocol/metacore/x/metacore/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateSend(MsgCreateSend) returns (MsgCreateSendResponse);
  rpc TxoutConfirmationVoter(MsgTxoutConfirmationVoter) returns (MsgTxoutConfirmationVoterResponse);
  rpc SetNodeKeys(MsgSetNodeKeys) returns (MsgSetNodeKeysResponse);
  rpc CreateTxinVoter(MsgCreateTxinVoter) returns (MsgCreateTxinVoterResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateSend {
  string creator = 1;
  string index = 2;
  string sender = 3;
  string senderChain = 4;
  string receiver = 5;
  string receiverChain = 6;
  string mBurnt = 7;
  string mMint = 8;
  string message = 9;
  string inTxHash = 10;
  uint64 inBlockHeight = 11;
  string outTxHash = 12;
  uint64 outBlockHeight = 13;
}
message MsgCreateSendResponse { }


message MsgTxoutConfirmationVoter {
  string creator = 1;
  uint64 txoutId = 2;
  string txHash = 3;
  uint64 mMint = 4;
  string destinationAsset = 5;
  uint64 destinationAmount = 6;
  string toAddress = 7;
  uint64 blockHeight = 8;
}

message MsgTxoutConfirmationVoterResponse {
}

message MsgSetNodeKeys {
  string creator = 1;
  common.PubKeySet pubkeySet = 2;
  string validatorConsensusPubkey = 3;
}

message MsgSetNodeKeysResponse {
}

message MsgCreateTxinVoter {
  string creator = 1;
  string index = 2;
  string txHash = 3;
  string sourceAsset = 4;
  uint64 sourceAmount = 5;
  uint64 mBurnt = 6;
  string destinationAsset = 7;
  string fromAddress = 8;
  string toAddress = 9;
  uint64 blockHeight = 10;
}
message MsgCreateTxinVoterResponse { }
