syntax = "proto3";
package MetaProtocol.metacore.metacore;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "metacore/in_tx.proto";
import "metacore/tx_list.proto";
import "metacore/gas_balance.proto";
import "metacore/gas_price.proto";
import "metacore/chain_nonces.proto";
import "metacore/last_block_height.proto";
import "metacore/receive.proto";
import "metacore/send.proto";
import "metacore/node_account.proto";

option go_package = "github.com/Meta-Protocol/metacore/x/metacore/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a inTx by index.
	rpc InTx(QueryGetInTxRequest) returns (QueryGetInTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/inTx/{index}";
	}

	// Queries a list of inTx items.
	rpc InTxAll(QueryAllInTxRequest) returns (QueryAllInTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/inTx";
	}


	// Queries a txList by index.
	rpc TxList(QueryGetTxRequest) returns (QueryGetTxResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/txList";
	}


	// Queries a gasBalance by index.
	rpc GasBalance(QueryGetGasBalanceRequest) returns (QueryGetGasBalanceResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/gasBalance/{index}";
	}

	// Queries a list of gasBalance items.
	rpc GasBalanceAll(QueryAllGasBalanceRequest) returns (QueryAllGasBalanceResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/gasBalance";
	}


	// Queries a gasPrice by index.
	rpc GasPrice(QueryGetGasPriceRequest) returns (QueryGetGasPriceResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/gasPrice/{index}";
	}

	// Queries a list of gasPrice items.
	rpc GasPriceAll(QueryAllGasPriceRequest) returns (QueryAllGasPriceResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/gasPrice";
	}


	// Queries a chainNonces by index.
	rpc ChainNonces(QueryGetChainNoncesRequest) returns (QueryGetChainNoncesResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/chainNonces/{index}";
	}

	// Queries a list of chainNonces items.
	rpc ChainNoncesAll(QueryAllChainNoncesRequest) returns (QueryAllChainNoncesResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/chainNonces";
	}


	// Queries a lastBlockHeight by index.
	rpc LastBlockHeight(QueryGetLastBlockHeightRequest) returns (QueryGetLastBlockHeightResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/lastBlockHeight/{index}";
	}

	// Queries a list of lastBlockHeight items.
	rpc LastBlockHeightAll(QueryAllLastBlockHeightRequest) returns (QueryAllLastBlockHeightResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/lastBlockHeight";
	}


	// Queries a receive by index.
	rpc Receive(QueryGetReceiveRequest) returns (QueryGetReceiveResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/receive/{index}";
	}

	// Queries a list of receive items.
	rpc ReceiveAll(QueryAllReceiveRequest) returns (QueryAllReceiveResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/receive";
	}


	// Queries a send by index.
	rpc Send(QueryGetSendRequest) returns (QueryGetSendResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/send/{index}";
	}

	// Queries a list of send items.
	rpc SendAll(QueryAllSendRequest) returns (QueryAllSendResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/send";
	}

	// Queries a list of send items.
	rpc SendAllPending(QueryAllSendRequest) returns (QueryAllSendResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/sendPending";
	}


	// Queries a nodeAccount by index.
	rpc NodeAccount(QueryGetNodeAccountRequest) returns (QueryGetNodeAccountResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/nodeAccount/{index}";
	}

	// Queries a list of nodeAccount items.
	rpc NodeAccountAll(QueryAllNodeAccountRequest) returns (QueryAllNodeAccountResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/nodeAccount";
	}


	// Queries a list of lastMetaHeight items.
	rpc LastMetaHeight(QueryLastMetaHeightRequest) returns (QueryLastMetaHeightResponse) {
		option (google.api.http).get = "/Meta-Protocol/metacore/metacore/lastMetaHeight";
	}



}

// this line is used by starport scaffolding # 3
message QueryGetInTxRequest {
	string index = 1;
}

message QueryGetInTxResponse {
	InTx InTx = 1;
}

message QueryAllInTxRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInTxResponse {
	repeated InTx InTx = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetTxRequest {
	int64 from = 1;
	int64 to = 2;
	int64 last = 3; 
}

message QueryGetTxResponse {
	repeated Tx tx = 1;
	int64 length = 2;
}
message QueryGetGasBalanceRequest {
	string index = 1;
}

message QueryGetGasBalanceResponse {
	GasBalance GasBalance = 1;
}

message QueryAllGasBalanceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGasBalanceResponse {
	repeated GasBalance GasBalance = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetGasPriceRequest {
	string index = 1;
}

message QueryGetGasPriceResponse {
	GasPrice GasPrice = 1;
}

message QueryAllGasPriceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGasPriceResponse {
	repeated GasPrice GasPrice = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetChainNoncesRequest {
	string index = 1;
}

message QueryGetChainNoncesResponse {
	ChainNonces ChainNonces = 1;
}

message QueryAllChainNoncesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllChainNoncesResponse {
	repeated ChainNonces ChainNonces = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetLastBlockHeightRequest {
	string index = 1;
}

message QueryGetLastBlockHeightResponse {
	LastBlockHeight LastBlockHeight = 1;
}

message QueryAllLastBlockHeightRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLastBlockHeightResponse {
	repeated LastBlockHeight LastBlockHeight = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetReceiveRequest {
	string index = 1;
}

message QueryGetReceiveResponse {
	Receive Receive = 1;
}

message QueryAllReceiveRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReceiveResponse {
	repeated Receive Receive = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetSendRequest {
	string index = 1;
}

message QueryGetSendResponse {
	Send Send = 1;
}

message QueryAllSendRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSendResponse {
	repeated Send Send = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetNodeAccountRequest {
	string index = 1;
}

message QueryGetNodeAccountResponse {
	NodeAccount NodeAccount = 1;
}

message QueryAllNodeAccountRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNodeAccountResponse {
	repeated NodeAccount NodeAccount = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryLastMetaHeightRequest {
}

message QueryLastMetaHeightResponse {
	uint64 Height = 1;
}
