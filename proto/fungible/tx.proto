syntax = "proto3";
package zetachain.zetacore.fungible;

import "common/common.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/zeta-chain/zetacore/x/fungible/types";

// Msg defines the Msg service.
service Msg {
  rpc DeployFungibleCoinZRC20(MsgDeployFungibleCoinZRC20) returns (MsgDeployFungibleCoinZRC20Response);
  rpc RemoveForeignCoin(MsgRemoveForeignCoin) returns (MsgRemoveForeignCoinResponse);
  rpc UpdateSystemContract(MsgUpdateSystemContract) returns (MsgUpdateSystemContractResponse);
  rpc UpdateZRC20WithdrawFee(MsgUpdateZRC20WithdrawFee) returns (MsgUpdateZRC20WithdrawFeeResponse);
}

message MsgUpdateZRC20WithdrawFee {
  string creator = 1;
  string zrc20_address = 2; // zrc20 address
  string new_withdraw_fee = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
}

message MsgUpdateZRC20WithdrawFeeResponse {}

message MsgUpdateSystemContract {
  string creator = 1;
  string new_system_contract_address = 2;
}

message MsgUpdateSystemContractResponse {}

message MsgDeployFungibleCoinZRC20 {
  string creator = 1;
  string ERC20 = 2;
  string foreignChain = 3;
  uint32 decimals = 4;
  string name = 5;
  string symbol = 6;
  common.CoinType coinType = 7;
  int64 gasLimit = 8;
}

message MsgDeployFungibleCoinZRC20Response {}

message MsgRemoveForeignCoin {
  string creator = 1;
  string name = 2;
}

message MsgRemoveForeignCoinResponse {}
