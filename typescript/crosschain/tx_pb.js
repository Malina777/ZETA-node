// @generated by protoc-gen-es v1.3.0
// @generated from file crosschain/tx.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { CoinType, PubKeySet, ReceiveStatus } from "../common/common_pb.js";

/**
 * @generated from message zetachain.zetacore.crosschain.MsgAddToOutTxTracker
 */
export const MsgAddToOutTxTracker = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgAddToOutTxTracker",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "tx_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgAddToOutTxTrackerResponse
 */
export const MsgAddToOutTxTrackerResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgAddToOutTxTrackerResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgRemoveFromOutTxTracker
 */
export const MsgRemoveFromOutTxTracker = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgRemoveFromOutTxTracker",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgRemoveFromOutTxTrackerResponse
 */
export const MsgRemoveFromOutTxTrackerResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgRemoveFromOutTxTrackerResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgUpdatePermissionFlags
 */
export const MsgUpdatePermissionFlags = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgUpdatePermissionFlags",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "isInboundEnabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgUpdatePermissionFlagsResponse
 */
export const MsgUpdatePermissionFlagsResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgUpdatePermissionFlagsResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgUpdateKeygen
 */
export const MsgUpdateKeygen = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgUpdateKeygen",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "block", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgUpdateKeygenResponse
 */
export const MsgUpdateKeygenResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgUpdateKeygenResponse",
  [],
);

/**
 * this line is used by starport scaffolding # proto/tx/message
 *
 * @generated from message zetachain.zetacore.crosschain.MsgCreateTSSVoter
 */
export const MsgCreateTSSVoter = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgCreateTSSVoter",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tss_pubkey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "keyGenZetaHeight", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(ReceiveStatus) },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgCreateTSSVoterResponse
 */
export const MsgCreateTSSVoterResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgCreateTSSVoterResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgGasPriceVoter
 */
export const MsgGasPriceVoter = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgGasPriceVoter",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "block_number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "supply", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgGasPriceVoterResponse
 */
export const MsgGasPriceVoterResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgGasPriceVoterResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgNonceVoter
 */
export const MsgNonceVoter = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgNonceVoter",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgNonceVoterResponse
 */
export const MsgNonceVoterResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgNonceVoterResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTx
 */
export const MsgVoteOnObservedOutboundTx = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTx",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cctx_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "observed_outTx_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "observed_outTx_blockHeight", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "zeta_minted", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(ReceiveStatus) },
    { no: 7, name: "outTx_chain", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "outTx_tss_nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "coin_type", kind: "enum", T: proto3.getEnumType(CoinType) },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTxResponse
 */
export const MsgVoteOnObservedOutboundTxResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTxResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTx
 */
export const MsgVoteOnObservedInboundTx = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTx",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sender_chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "receiver", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "receiver_chain", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "in_tx_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "in_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "gas_limit", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "coin_type", kind: "enum", T: proto3.getEnumType(CoinType) },
    { no: 13, name: "tx_origin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTxResponse
 */
export const MsgVoteOnObservedInboundTxResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTxResponse",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgSetNodeKeys
 */
export const MsgSetNodeKeys = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgSetNodeKeys",
  () => [
    { no: 1, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pubkeySet", kind: "message", T: PubKeySet },
    { no: 3, name: "tss_signer_Address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.MsgSetNodeKeysResponse
 */
export const MsgSetNodeKeysResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.MsgSetNodeKeysResponse",
  [],
);

