// @generated by protoc-gen-es v1.3.0
// @generated from file crosschain/permission_flags.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message zetachain.zetacore.crosschain.PermissionFlags
 */
export declare class PermissionFlags extends Message<PermissionFlags> {
  /**
   * @generated from field: bool isInboundEnabled = 1;
   */
  isInboundEnabled: boolean;

  constructor(data?: PartialMessage<PermissionFlags>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.PermissionFlags";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PermissionFlags;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PermissionFlags;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PermissionFlags;

  static equals(a: PermissionFlags | PlainMessage<PermissionFlags> | undefined, b: PermissionFlags | PlainMessage<PermissionFlags> | undefined): boolean;
}

