// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file crosschain/tx.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CoinType, PubKeySet, ReceiveStatus } from "../common/common_pb.js";

/**
 * @generated from message zetachain.zetacore.crosschain.MsgAddToOutTxTracker
 */
export declare class MsgAddToOutTxTracker extends Message<MsgAddToOutTxTracker> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: int64 chain_id = 2;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 nonce = 3;
   */
  nonce: bigint;

  /**
   * @generated from field: string tx_hash = 4;
   */
  txHash: string;

  constructor(data?: PartialMessage<MsgAddToOutTxTracker>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgAddToOutTxTracker";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddToOutTxTracker;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddToOutTxTracker;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddToOutTxTracker;

  static equals(a: MsgAddToOutTxTracker | PlainMessage<MsgAddToOutTxTracker> | undefined, b: MsgAddToOutTxTracker | PlainMessage<MsgAddToOutTxTracker> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgAddToOutTxTrackerResponse
 */
export declare class MsgAddToOutTxTrackerResponse extends Message<MsgAddToOutTxTrackerResponse> {
  constructor(data?: PartialMessage<MsgAddToOutTxTrackerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgAddToOutTxTrackerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddToOutTxTrackerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddToOutTxTrackerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddToOutTxTrackerResponse;

  static equals(a: MsgAddToOutTxTrackerResponse | PlainMessage<MsgAddToOutTxTrackerResponse> | undefined, b: MsgAddToOutTxTrackerResponse | PlainMessage<MsgAddToOutTxTrackerResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgRemoveFromOutTxTracker
 */
export declare class MsgRemoveFromOutTxTracker extends Message<MsgRemoveFromOutTxTracker> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: int64 chain_id = 2;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 nonce = 3;
   */
  nonce: bigint;

  constructor(data?: PartialMessage<MsgRemoveFromOutTxTracker>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgRemoveFromOutTxTracker";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveFromOutTxTracker;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveFromOutTxTracker;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveFromOutTxTracker;

  static equals(a: MsgRemoveFromOutTxTracker | PlainMessage<MsgRemoveFromOutTxTracker> | undefined, b: MsgRemoveFromOutTxTracker | PlainMessage<MsgRemoveFromOutTxTracker> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgRemoveFromOutTxTrackerResponse
 */
export declare class MsgRemoveFromOutTxTrackerResponse extends Message<MsgRemoveFromOutTxTrackerResponse> {
  constructor(data?: PartialMessage<MsgRemoveFromOutTxTrackerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgRemoveFromOutTxTrackerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveFromOutTxTrackerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveFromOutTxTrackerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveFromOutTxTrackerResponse;

  static equals(a: MsgRemoveFromOutTxTrackerResponse | PlainMessage<MsgRemoveFromOutTxTrackerResponse> | undefined, b: MsgRemoveFromOutTxTrackerResponse | PlainMessage<MsgRemoveFromOutTxTrackerResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgCreateTSSVoter
 */
export declare class MsgCreateTSSVoter extends Message<MsgCreateTSSVoter> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: string tss_pubkey = 2;
   */
  tssPubkey: string;

  /**
   * @generated from field: int64 keyGenZetaHeight = 3;
   */
  keyGenZetaHeight: bigint;

  /**
   * @generated from field: common.ReceiveStatus status = 4;
   */
  status: ReceiveStatus;

  constructor(data?: PartialMessage<MsgCreateTSSVoter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgCreateTSSVoter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateTSSVoter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateTSSVoter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateTSSVoter;

  static equals(a: MsgCreateTSSVoter | PlainMessage<MsgCreateTSSVoter> | undefined, b: MsgCreateTSSVoter | PlainMessage<MsgCreateTSSVoter> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgCreateTSSVoterResponse
 */
export declare class MsgCreateTSSVoterResponse extends Message<MsgCreateTSSVoterResponse> {
  constructor(data?: PartialMessage<MsgCreateTSSVoterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgCreateTSSVoterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateTSSVoterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateTSSVoterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateTSSVoterResponse;

  static equals(a: MsgCreateTSSVoterResponse | PlainMessage<MsgCreateTSSVoterResponse> | undefined, b: MsgCreateTSSVoterResponse | PlainMessage<MsgCreateTSSVoterResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgGasPriceVoter
 */
export declare class MsgGasPriceVoter extends Message<MsgGasPriceVoter> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: int64 chain_id = 2;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 price = 3;
   */
  price: bigint;

  /**
   * @generated from field: uint64 block_number = 4;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string supply = 5;
   */
  supply: string;

  constructor(data?: PartialMessage<MsgGasPriceVoter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgGasPriceVoter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgGasPriceVoter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgGasPriceVoter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgGasPriceVoter;

  static equals(a: MsgGasPriceVoter | PlainMessage<MsgGasPriceVoter> | undefined, b: MsgGasPriceVoter | PlainMessage<MsgGasPriceVoter> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgGasPriceVoterResponse
 */
export declare class MsgGasPriceVoterResponse extends Message<MsgGasPriceVoterResponse> {
  constructor(data?: PartialMessage<MsgGasPriceVoterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgGasPriceVoterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgGasPriceVoterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgGasPriceVoterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgGasPriceVoterResponse;

  static equals(a: MsgGasPriceVoterResponse | PlainMessage<MsgGasPriceVoterResponse> | undefined, b: MsgGasPriceVoterResponse | PlainMessage<MsgGasPriceVoterResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgNonceVoter
 */
export declare class MsgNonceVoter extends Message<MsgNonceVoter> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: int64 chain_id = 2;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 nonce = 3;
   */
  nonce: bigint;

  constructor(data?: PartialMessage<MsgNonceVoter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgNonceVoter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNonceVoter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNonceVoter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNonceVoter;

  static equals(a: MsgNonceVoter | PlainMessage<MsgNonceVoter> | undefined, b: MsgNonceVoter | PlainMessage<MsgNonceVoter> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgNonceVoterResponse
 */
export declare class MsgNonceVoterResponse extends Message<MsgNonceVoterResponse> {
  constructor(data?: PartialMessage<MsgNonceVoterResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgNonceVoterResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgNonceVoterResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgNonceVoterResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgNonceVoterResponse;

  static equals(a: MsgNonceVoterResponse | PlainMessage<MsgNonceVoterResponse> | undefined, b: MsgNonceVoterResponse | PlainMessage<MsgNonceVoterResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTx
 */
export declare class MsgVoteOnObservedOutboundTx extends Message<MsgVoteOnObservedOutboundTx> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: string cctx_hash = 2;
   */
  cctxHash: string;

  /**
   * @generated from field: string observed_outTx_hash = 3;
   */
  observedOutTxHash: string;

  /**
   * @generated from field: uint64 observed_outTx_blockHeight = 4;
   */
  observedOutTxBlockHeight: bigint;

  /**
   * @generated from field: string zeta_minted = 5;
   */
  zetaMinted: string;

  /**
   * @generated from field: common.ReceiveStatus status = 6;
   */
  status: ReceiveStatus;

  /**
   * @generated from field: int64 outTx_chain = 7;
   */
  outTxChain: bigint;

  /**
   * @generated from field: uint64 outTx_tss_nonce = 8;
   */
  outTxTssNonce: bigint;

  /**
   * @generated from field: common.CoinType coin_type = 9;
   */
  coinType: CoinType;

  constructor(data?: PartialMessage<MsgVoteOnObservedOutboundTx>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTx";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgVoteOnObservedOutboundTx;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgVoteOnObservedOutboundTx;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgVoteOnObservedOutboundTx;

  static equals(a: MsgVoteOnObservedOutboundTx | PlainMessage<MsgVoteOnObservedOutboundTx> | undefined, b: MsgVoteOnObservedOutboundTx | PlainMessage<MsgVoteOnObservedOutboundTx> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTxResponse
 */
export declare class MsgVoteOnObservedOutboundTxResponse extends Message<MsgVoteOnObservedOutboundTxResponse> {
  constructor(data?: PartialMessage<MsgVoteOnObservedOutboundTxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgVoteOnObservedOutboundTxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgVoteOnObservedOutboundTxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgVoteOnObservedOutboundTxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgVoteOnObservedOutboundTxResponse;

  static equals(a: MsgVoteOnObservedOutboundTxResponse | PlainMessage<MsgVoteOnObservedOutboundTxResponse> | undefined, b: MsgVoteOnObservedOutboundTxResponse | PlainMessage<MsgVoteOnObservedOutboundTxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTx
 */
export declare class MsgVoteOnObservedInboundTx extends Message<MsgVoteOnObservedInboundTx> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: string sender = 2;
   */
  sender: string;

  /**
   * @generated from field: int64 sender_chain_id = 3;
   */
  senderChainId: bigint;

  /**
   * @generated from field: string receiver = 4;
   */
  receiver: string;

  /**
   * @generated from field: int64 receiver_chain = 5;
   */
  receiverChain: bigint;

  /**
   *  string zeta_burnt = 6;
   *
   * @generated from field: string amount = 6;
   */
  amount: string;

  /**
   *  string mMint = 7;
   *
   * @generated from field: string message = 8;
   */
  message: string;

  /**
   * @generated from field: string in_tx_hash = 9;
   */
  inTxHash: string;

  /**
   * @generated from field: uint64 in_block_height = 10;
   */
  inBlockHeight: bigint;

  /**
   * @generated from field: uint64 gas_limit = 11;
   */
  gasLimit: bigint;

  /**
   * @generated from field: common.CoinType coin_type = 12;
   */
  coinType: CoinType;

  /**
   * @generated from field: string tx_origin = 13;
   */
  txOrigin: string;

  /**
   * @generated from field: string asset = 14;
   */
  asset: string;

  constructor(data?: PartialMessage<MsgVoteOnObservedInboundTx>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTx";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgVoteOnObservedInboundTx;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgVoteOnObservedInboundTx;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgVoteOnObservedInboundTx;

  static equals(a: MsgVoteOnObservedInboundTx | PlainMessage<MsgVoteOnObservedInboundTx> | undefined, b: MsgVoteOnObservedInboundTx | PlainMessage<MsgVoteOnObservedInboundTx> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTxResponse
 */
export declare class MsgVoteOnObservedInboundTxResponse extends Message<MsgVoteOnObservedInboundTxResponse> {
  constructor(data?: PartialMessage<MsgVoteOnObservedInboundTxResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgVoteOnObservedInboundTxResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgVoteOnObservedInboundTxResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgVoteOnObservedInboundTxResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgVoteOnObservedInboundTxResponse;

  static equals(a: MsgVoteOnObservedInboundTxResponse | PlainMessage<MsgVoteOnObservedInboundTxResponse> | undefined, b: MsgVoteOnObservedInboundTxResponse | PlainMessage<MsgVoteOnObservedInboundTxResponse> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgSetNodeKeys
 */
export declare class MsgSetNodeKeys extends Message<MsgSetNodeKeys> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: common.PubKeySet pubkeySet = 2;
   */
  pubkeySet?: PubKeySet;

  /**
   * @generated from field: string tss_signer_Address = 3;
   */
  tssSignerAddress: string;

  constructor(data?: PartialMessage<MsgSetNodeKeys>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgSetNodeKeys";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetNodeKeys;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetNodeKeys;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetNodeKeys;

  static equals(a: MsgSetNodeKeys | PlainMessage<MsgSetNodeKeys> | undefined, b: MsgSetNodeKeys | PlainMessage<MsgSetNodeKeys> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.MsgSetNodeKeysResponse
 */
export declare class MsgSetNodeKeysResponse extends Message<MsgSetNodeKeysResponse> {
  constructor(data?: PartialMessage<MsgSetNodeKeysResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.MsgSetNodeKeysResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSetNodeKeysResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSetNodeKeysResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSetNodeKeysResponse;

  static equals(a: MsgSetNodeKeysResponse | PlainMessage<MsgSetNodeKeysResponse> | undefined, b: MsgSetNodeKeysResponse | PlainMessage<MsgSetNodeKeysResponse> | undefined): boolean;
}

