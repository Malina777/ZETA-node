// @generated by protoc-gen-es v1.3.0
// @generated from file crosschain/query.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { OutTxTracker } from "./out_tx_tracker_pb.js";
import { PageRequest, PageResponse } from "../cosmos/base/query/v1beta1/pagination_pb.js";
import { InTxHashToCctx } from "./in_tx_hash_to_cctx_pb.js";
import { PermissionFlags } from "./permission_flags_pb.js";
import { Keygen } from "./keygen_pb.js";
import { TSS } from "./tss_pb.js";
import { GasPrice } from "./gas_price_pb.js";
import { ChainNonces } from "./chain_nonces_pb.js";
import { PendingNonces } from "./nonce_to_cctx_pb.js";
import { LastBlockHeight } from "./last_block_height_pb.js";
import { CrossChainTx } from "./cross_chain_tx_pb.js";
import { NodeAccount } from "./node_account_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message zetachain.zetacore.crosschain.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message zetachain.zetacore.crosschain.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetOutTxTrackerRequest
 */
export const QueryGetOutTxTrackerRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetOutTxTrackerRequest",
  () => [
    { no: 1, name: "chainID", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetOutTxTrackerResponse
 */
export const QueryGetOutTxTrackerResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetOutTxTrackerResponse",
  () => [
    { no: 1, name: "outTxTracker", kind: "message", T: OutTxTracker },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutTxTrackerRequest
 */
export const QueryAllOutTxTrackerRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllOutTxTrackerRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutTxTrackerResponse
 */
export const QueryAllOutTxTrackerResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllOutTxTrackerResponse",
  () => [
    { no: 1, name: "outTxTracker", kind: "message", T: OutTxTracker, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutTxTrackerByChainRequest
 */
export const QueryAllOutTxTrackerByChainRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllOutTxTrackerByChainRequest",
  () => [
    { no: 1, name: "chain", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllOutTxTrackerByChainResponse
 */
export const QueryAllOutTxTrackerByChainResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllOutTxTrackerByChainResponse",
  () => [
    { no: 1, name: "outTxTracker", kind: "message", T: OutTxTracker, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetInTxHashToCctxRequest
 */
export const QueryGetInTxHashToCctxRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetInTxHashToCctxRequest",
  () => [
    { no: 1, name: "inTxHash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetInTxHashToCctxResponse
 */
export const QueryGetInTxHashToCctxResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetInTxHashToCctxResponse",
  () => [
    { no: 1, name: "inTxHashToCctx", kind: "message", T: InTxHashToCctx },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInTxHashToCctxRequest
 */
export const QueryAllInTxHashToCctxRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllInTxHashToCctxRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllInTxHashToCctxResponse
 */
export const QueryAllInTxHashToCctxResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllInTxHashToCctxResponse",
  () => [
    { no: 1, name: "inTxHashToCctx", kind: "message", T: InTxHashToCctx, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetPermissionFlagsRequest
 */
export const QueryGetPermissionFlagsRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetPermissionFlagsRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetPermissionFlagsResponse
 */
export const QueryGetPermissionFlagsResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetPermissionFlagsResponse",
  () => [
    { no: 1, name: "PermissionFlags", kind: "message", T: PermissionFlags },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetTssAddressRequest
 */
export const QueryGetTssAddressRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetTssAddressRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetTssAddressResponse
 */
export const QueryGetTssAddressResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetTssAddressResponse",
  () => [
    { no: 1, name: "eth", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "btc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * this line is used by starport scaffolding # 3
 *
 * @generated from message zetachain.zetacore.crosschain.QueryGetKeygenRequest
 */
export const QueryGetKeygenRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetKeygenRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetKeygenResponse
 */
export const QueryGetKeygenResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetKeygenResponse",
  () => [
    { no: 1, name: "Keygen", kind: "message", T: Keygen },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetTSSRequest
 */
export const QueryGetTSSRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetTSSRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetTSSResponse
 */
export const QueryGetTSSResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetTSSResponse",
  () => [
    { no: 1, name: "TSS", kind: "message", T: TSS },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetGasPriceRequest
 */
export const QueryGetGasPriceRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetGasPriceRequest",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetGasPriceResponse
 */
export const QueryGetGasPriceResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetGasPriceResponse",
  () => [
    { no: 1, name: "GasPrice", kind: "message", T: GasPrice },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllGasPriceRequest
 */
export const QueryAllGasPriceRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllGasPriceRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllGasPriceResponse
 */
export const QueryAllGasPriceResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllGasPriceResponse",
  () => [
    { no: 1, name: "GasPrice", kind: "message", T: GasPrice, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetChainNoncesRequest
 */
export const QueryGetChainNoncesRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetChainNoncesRequest",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetChainNoncesResponse
 */
export const QueryGetChainNoncesResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetChainNoncesResponse",
  () => [
    { no: 1, name: "ChainNonces", kind: "message", T: ChainNonces },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllChainNoncesRequest
 */
export const QueryAllChainNoncesRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllChainNoncesRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllChainNoncesResponse
 */
export const QueryAllChainNoncesResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllChainNoncesResponse",
  () => [
    { no: 1, name: "ChainNonces", kind: "message", T: ChainNonces, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllPendingNoncesRequest
 */
export const QueryAllPendingNoncesRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllPendingNoncesRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllPendingNoncesResponse
 */
export const QueryAllPendingNoncesResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllPendingNoncesResponse",
  () => [
    { no: 1, name: "pending_nonces", kind: "message", T: PendingNonces, repeated: true },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetLastBlockHeightRequest
 */
export const QueryGetLastBlockHeightRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetLastBlockHeightRequest",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetLastBlockHeightResponse
 */
export const QueryGetLastBlockHeightResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetLastBlockHeightResponse",
  () => [
    { no: 1, name: "LastBlockHeight", kind: "message", T: LastBlockHeight },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllLastBlockHeightRequest
 */
export const QueryAllLastBlockHeightRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllLastBlockHeightRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllLastBlockHeightResponse
 */
export const QueryAllLastBlockHeightResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllLastBlockHeightResponse",
  () => [
    { no: 1, name: "LastBlockHeight", kind: "message", T: LastBlockHeight, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetCctxRequest
 */
export const QueryGetCctxRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetCctxRequest",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetCctxResponse
 */
export const QueryGetCctxResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetCctxResponse",
  () => [
    { no: 1, name: "CrossChainTx", kind: "message", T: CrossChainTx },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllCctxRequest
 */
export const QueryAllCctxRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllCctxRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllCctxResponse
 */
export const QueryAllCctxResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllCctxResponse",
  () => [
    { no: 1, name: "CrossChainTx", kind: "message", T: CrossChainTx, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllCctxPendingRequest
 */
export const QueryAllCctxPendingRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllCctxPendingRequest",
  () => [
    { no: 1, name: "chainId", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllCctxPendingResponse
 */
export const QueryAllCctxPendingResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllCctxPendingResponse",
  () => [
    { no: 1, name: "CrossChainTx", kind: "message", T: CrossChainTx, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetNodeAccountRequest
 */
export const QueryGetNodeAccountRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetNodeAccountRequest",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryGetNodeAccountResponse
 */
export const QueryGetNodeAccountResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryGetNodeAccountResponse",
  () => [
    { no: 1, name: "NodeAccount", kind: "message", T: NodeAccount },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllNodeAccountRequest
 */
export const QueryAllNodeAccountRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllNodeAccountRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryAllNodeAccountResponse
 */
export const QueryAllNodeAccountResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryAllNodeAccountResponse",
  () => [
    { no: 1, name: "NodeAccount", kind: "message", T: NodeAccount, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryLastZetaHeightRequest
 */
export const QueryLastZetaHeightRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryLastZetaHeightRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryLastZetaHeightResponse
 */
export const QueryLastZetaHeightResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryLastZetaHeightResponse",
  () => [
    { no: 1, name: "Height", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryConvertGasToZetaRequest
 */
export const QueryConvertGasToZetaRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryConvertGasToZetaRequest",
  () => [
    { no: 1, name: "chain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "gasLimit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryConvertGasToZetaResponse
 */
export const QueryConvertGasToZetaResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryConvertGasToZetaResponse",
  () => [
    { no: 1, name: "outboundGasInZeta", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "protocolFeeInZeta", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ZetaBlockHeight", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeRequest
 */
export const QueryMessagePassingProtocolFeeRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeRequest",
  [],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeResponse
 */
export const QueryMessagePassingProtocolFeeResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryMessagePassingProtocolFeeResponse",
  () => [
    { no: 1, name: "feeInZeta", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZEVMGetTransactionReceiptRequest
 */
export const QueryZEVMGetTransactionReceiptRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryZEVMGetTransactionReceiptRequest",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZEVMGetTransactionReceiptResponse
 */
export const QueryZEVMGetTransactionReceiptResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryZEVMGetTransactionReceiptResponse",
  () => [
    { no: 1, name: "block_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "block_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "cumulative_gas_used", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "gas_used", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "logs_bloom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "transaction_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "transaction_index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "logs", kind: "message", T: Log, repeated: true },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.Log
 */
export const Log = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.Log",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "topics", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "block_number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "transaction_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "transaction_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "block_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "log_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "removed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZEVMGetTransactionRequest
 */
export const QueryZEVMGetTransactionRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryZEVMGetTransactionRequest",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZEVMGetTransactionResponse
 */
export const QueryZEVMGetTransactionResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryZEVMGetTransactionResponse",
  () => [
    { no: 1, name: "block_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "block_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "gas", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "gas_price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "input", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "transaction_index", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "access_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 14, name: "chain_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "v", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "r", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "s", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZEVMGetBlockByNumberRequest
 */
export const QueryZEVMGetBlockByNumberRequest = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryZEVMGetBlockByNumberRequest",
  () => [
    { no: 1, name: "height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.crosschain.QueryZEVMGetBlockByNumberResponse
 */
export const QueryZEVMGetBlockByNumberResponse = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.QueryZEVMGetBlockByNumberResponse",
  () => [
    { no: 1, name: "number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "parent_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sha3_uncles", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "logs_bloom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "transactions_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "state_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "receipts_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "miner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "difficulty", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "total_difficulty", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "extra_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "size", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "gas_limit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "gas_used", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "transactions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 19, name: "uncles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "base_fee_per_gas", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "mix_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

