// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file crosschain/cross_chain_tx_v14.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CoinType } from "../common/common_pb.js";
import type { Status, TxFinalizationStatus } from "./cross_chain_tx_pb.js";

/**
 * @generated from message zetachain.zetacore.crosschain.InboundTxParamsV14
 */
export declare class InboundTxParamsV14 extends Message<InboundTxParamsV14> {
  /**
   * this address is the immediate contract/EOA that calls the Connector.send()
   *
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: int64 sender_chain_id = 2;
   */
  senderChainId: bigint;

  /**
   * this address is the EOA that signs the inbound tx
   *
   * @generated from field: string tx_origin = 3;
   */
  txOrigin: string;

  /**
   * @generated from field: common.CoinType coin_type = 4;
   */
  coinType: CoinType;

  /**
   * for ERC20 coin type, the asset is an address of the ERC20 contract
   *
   * @generated from field: string asset = 5;
   */
  asset: string;

  /**
   * @generated from field: string amount = 6;
   */
  amount: string;

  /**
   * @generated from field: string inbound_tx_observed_hash = 7;
   */
  inboundTxObservedHash: string;

  /**
   * @generated from field: uint64 inbound_tx_observed_external_height = 8;
   */
  inboundTxObservedExternalHeight: bigint;

  /**
   * @generated from field: string inbound_tx_ballot_index = 9;
   */
  inboundTxBallotIndex: string;

  /**
   * @generated from field: uint64 inbound_tx_finalized_zeta_height = 10;
   */
  inboundTxFinalizedZetaHeight: bigint;

  /**
   * @generated from field: zetachain.zetacore.crosschain.TxFinalizationStatus tx_finalization_status = 11;
   */
  txFinalizationStatus: TxFinalizationStatus;

  constructor(data?: PartialMessage<InboundTxParamsV14>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.InboundTxParamsV14";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InboundTxParamsV14;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InboundTxParamsV14;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InboundTxParamsV14;

  static equals(a: InboundTxParamsV14 | PlainMessage<InboundTxParamsV14> | undefined, b: InboundTxParamsV14 | PlainMessage<InboundTxParamsV14> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.OutboundTxParamsV14
 */
export declare class OutboundTxParamsV14 extends Message<OutboundTxParamsV14> {
  /**
   * @generated from field: string receiver = 1;
   */
  receiver: string;

  /**
   * @generated from field: int64 receiver_chainId = 2;
   */
  receiverChainId: bigint;

  /**
   * @generated from field: common.CoinType coin_type = 3;
   */
  coinType: CoinType;

  /**
   * @generated from field: string amount = 4;
   */
  amount: string;

  /**
   * @generated from field: uint64 outbound_tx_tss_nonce = 5;
   */
  outboundTxTssNonce: bigint;

  /**
   * @generated from field: uint64 outbound_tx_gas_limit = 6;
   */
  outboundTxGasLimit: bigint;

  /**
   * @generated from field: string outbound_tx_gas_price = 7;
   */
  outboundTxGasPrice: string;

  /**
   * the above are commands for zetaclients
   * the following fields are used when the outbound tx is mined
   *
   * @generated from field: string outbound_tx_hash = 8;
   */
  outboundTxHash: string;

  /**
   * @generated from field: string outbound_tx_ballot_index = 9;
   */
  outboundTxBallotIndex: string;

  /**
   * @generated from field: uint64 outbound_tx_observed_external_height = 10;
   */
  outboundTxObservedExternalHeight: bigint;

  /**
   * @generated from field: uint64 outbound_tx_gas_used = 20;
   */
  outboundTxGasUsed: bigint;

  /**
   * @generated from field: string outbound_tx_effective_gas_price = 21;
   */
  outboundTxEffectiveGasPrice: string;

  /**
   * @generated from field: uint64 outbound_tx_effective_gas_limit = 22;
   */
  outboundTxEffectiveGasLimit: bigint;

  /**
   * @generated from field: string tss_pubkey = 11;
   */
  tssPubkey: string;

  /**
   * @generated from field: zetachain.zetacore.crosschain.TxFinalizationStatus tx_finalization_status = 12;
   */
  txFinalizationStatus: TxFinalizationStatus;

  constructor(data?: PartialMessage<OutboundTxParamsV14>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.OutboundTxParamsV14";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutboundTxParamsV14;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutboundTxParamsV14;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutboundTxParamsV14;

  static equals(a: OutboundTxParamsV14 | PlainMessage<OutboundTxParamsV14> | undefined, b: OutboundTxParamsV14 | PlainMessage<OutboundTxParamsV14> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.crosschain.CrossChainTxV14
 */
export declare class CrossChainTxV14 extends Message<CrossChainTxV14> {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;

  /**
   * @generated from field: string index = 2;
   */
  index: string;

  /**
   * @generated from field: string zeta_fees = 5;
   */
  zetaFees: string;

  /**
   * Not used by protocol , just relayed across
   *
   * @generated from field: string relayed_message = 6;
   */
  relayedMessage: string;

  /**
   * @generated from field: zetachain.zetacore.crosschain.Status cctx_status = 8;
   */
  cctxStatus?: Status;

  /**
   * @generated from field: zetachain.zetacore.crosschain.InboundTxParamsV14 inbound_tx_params = 9;
   */
  inboundTxParams?: InboundTxParamsV14;

  /**
   * @generated from field: repeated zetachain.zetacore.crosschain.OutboundTxParamsV14 outbound_tx_params = 10;
   */
  outboundTxParams: OutboundTxParamsV14[];

  constructor(data?: PartialMessage<CrossChainTxV14>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.crosschain.CrossChainTxV14";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CrossChainTxV14;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CrossChainTxV14;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CrossChainTxV14;

  static equals(a: CrossChainTxV14 | PlainMessage<CrossChainTxV14> | undefined, b: CrossChainTxV14 | PlainMessage<CrossChainTxV14> | undefined): boolean;
}

