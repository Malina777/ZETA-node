// @generated by protoc-gen-es v1.3.0
// @generated from file crosschain/nonce_to_cctx.proto (package zetachain.zetacore.crosschain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * store key is tss+chainid+nonce
 *
 * @generated from message zetachain.zetacore.crosschain.NonceToCctx
 */
export const NonceToCctx = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.NonceToCctx",
  () => [
    { no: 1, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "nonce", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "cctxIndex", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tss", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * store key is tss+chainid
 *
 * @generated from message zetachain.zetacore.crosschain.PendingNonces
 */
export const PendingNonces = proto3.makeMessageType(
  "zetachain.zetacore.crosschain.PendingNonces",
  () => [
    { no: 1, name: "nonce_low", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "nonce_high", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "tss", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

