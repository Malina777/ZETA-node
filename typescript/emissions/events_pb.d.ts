// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file emissions/events.proto (package zetachain.zetacore.emissions, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message zetachain.zetacore.emissions.EventBlockEmissions
 */
export declare class EventBlockEmissions extends Message<EventBlockEmissions> {
  /**
   * @generated from field: string msg_type_url = 1;
   */
  msgTypeUrl: string;

  /**
   * @generated from field: string bond_factor = 2;
   */
  bondFactor: string;

  /**
   * @generated from field: string reserves_factor = 3;
   */
  reservesFactor: string;

  /**
   * @generated from field: string duration_factor = 4;
   */
  durationFactor: string;

  /**
   * @generated from field: string validator_rewards_for_block = 5;
   */
  validatorRewardsForBlock: string;

  /**
   * @generated from field: string observer_rewards_for_block = 6;
   */
  observerRewardsForBlock: string;

  /**
   * @generated from field: string tss_rewards_for_block = 7;
   */
  tssRewardsForBlock: string;

  constructor(data?: PartialMessage<EventBlockEmissions>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.emissions.EventBlockEmissions";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventBlockEmissions;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventBlockEmissions;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventBlockEmissions;

  static equals(a: EventBlockEmissions | PlainMessage<EventBlockEmissions> | undefined, b: EventBlockEmissions | PlainMessage<EventBlockEmissions> | undefined): boolean;
}

