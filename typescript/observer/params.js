// @generated by protoc-gen-es v1.3.0
// @generated from file observer/params.proto (package zetachain.zetacore.observer, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Chain } from "../common/common_pb.js";

/**
 * @generated from enum zetachain.zetacore.observer.Policy_Type
 */
export const Policy_Type = proto3.makeEnum(
  "zetachain.zetacore.observer.Policy_Type",
  [
    {no: 0, name: "stop_inbound_cctx"},
    {no: 1, name: "deploy_fungible_coin"},
    {no: 2, name: "update_client_params"},
    {no: 3, name: "update_keygen_block"},
    {no: 4, name: "out_tx_tracker"},
  ],
);

/**
 * @generated from message zetachain.zetacore.observer.CoreParamsList
 */
export const CoreParamsList = proto3.makeMessageType(
  "zetachain.zetacore.observer.CoreParamsList",
  () => [
    { no: 1, name: "core_params", kind: "message", T: CoreParams, repeated: true },
  ],
);

/**
 * @generated from message zetachain.zetacore.observer.CoreParams
 */
export const CoreParams = proto3.makeMessageType(
  "zetachain.zetacore.observer.CoreParams",
  () => [
    { no: 1, name: "confirmation_count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "gas_price_ticker", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "in_tx_ticker", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "out_tx_ticker", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "watch_utxo_ticker", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "zeta_token_contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "connector_contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "erc20_custody_contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "chain_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "outbound_tx_schedule_interval", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "outbound_tx_schedule_lookahead", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.observer.ObserverParams
 */
export const ObserverParams = proto3.makeMessageType(
  "zetachain.zetacore.observer.ObserverParams",
  () => [
    { no: 1, name: "chain", kind: "message", T: Chain },
    { no: 3, name: "ballot_threshold", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "min_observer_delegation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "is_supported", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message zetachain.zetacore.observer.Admin_Policy
 */
export const Admin_Policy = proto3.makeMessageType(
  "zetachain.zetacore.observer.Admin_Policy",
  () => [
    { no: 1, name: "policy_type", kind: "enum", T: proto3.getEnumType(Policy_Type) },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Params defines the parameters for the module.
 *
 * @generated from message zetachain.zetacore.observer.Params
 */
export const Params = proto3.makeMessageType(
  "zetachain.zetacore.observer.Params",
  () => [
    { no: 1, name: "observer_params", kind: "message", T: ObserverParams, repeated: true },
    { no: 2, name: "admin_policy", kind: "message", T: Admin_Policy, repeated: true },
  ],
);

