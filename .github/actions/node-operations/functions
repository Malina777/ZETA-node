#!/bin/bash

function set_regions() {
    export regions=(
        "us-east-1"
        "us-west-2"
        "eu-west-1"
        "ap-southeast-1"
    )
}

function stop_zetavisor() {
    COMMAND_ID=$(aws ssm send-command \
        --targets Key=tag:configured-by,Values=ansible \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=["systemctl stop zetavisor"]' \
        --region "$1" | jq .Command.CommandId -r || exit 1)
    echo "$COMMAND_ID"
}

function stop_zetaclient() {
    COMMAND_ID=$(aws ssm send-command \
        --targets Key=tag:Role,Values=validator \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=["systemctl stop zetaclientd"]' \
        --region "$1" | jq .Command.CommandId -r || exit 1)
    echo "$COMMAND_ID"
}

function restart_zetavisor() {
    COMMAND_ID=$(aws ssm send-command \
        --targets Key=tag:configured-by,Values=ansible \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=["systemctl restart zetavisor"]' \
        --region "$1" | jq .Command.CommandId -r || exit 1)
    echo "$COMMAND_ID"
}

function restart_zetaclient() {
    COMMAND_ID=$(aws ssm send-command \
        --targets Key=tag:Role,Values=validator \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=["systemctl restart zetaclientd"]' \
        --region "$1" | jq .Command.CommandId -r || exit 1)
    echo "$COMMAND_ID"
}

function delete_zetaclient_db() {
    COMMAND_ID=$(aws ssm send-command \
        --targets Key=tag:Role,Values=validator \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=["rm -rf /home/zetachain/.zetaclient/*"]' \
        --region "$1" | jq .Command.CommandId -r || exit 1)
    echo "$COMMAND_ID"
}

function unjail_validators() {
    COMMAND_ID=$(aws ssm send-command \
        --targets Key=tag:Role,Values=validator \
        --document-name "AWS-RunShellScript" \
        --parameters "commands=['export HOME=/home/zetachain && zetacored tx slashing unjail --chain-id athens_7001-1 --from operator -y']" \
        --region "$1" | jq .Command.CommandId -r || exit 1)
    echo "$COMMAND_ID"
}

check_cmd_status() {
    COMMAND_ID=$1
    echo "COMMAND_ID: $COMMAND_ID"
    COMMAND_STATUS=$(aws ssm list-commands --command-id "$COMMAND_ID" | jq '.Commands[0].Status' -r)
    until [[ "$COMMAND_STATUS" == "Success" || "$COMMAND_STATUS" == "Failed" ]]; do
        echo "Waiting for Command to complete. ID: $COMMAND_ID | Status: $COMMAND_STATUS"
        sleep 2
        COMMAND_STATUS=$(aws ssm list-commands --command-id "$COMMAND_ID" | jq '.Commands[0].Status' -r)
    done
    echo "Complete. ID: $COMMAND_ID | Status: $COMMAND_STATUS"
    if [ "$COMMAND_STATUS" == "Failed" ]; then
        echo "Command ID $COMMAND_ID Failed" && exit 1
    fi
}
