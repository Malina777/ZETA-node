name: 'Update Nodes'
description: 'Builds ZetaChain Binaries'
inputs:
  S3_BUCKET_NAME:  
    description: 'S3 Bucket Name'
    required: true
  TAKE_SNAPSHOTS:  
    description: 'Take Snapshots of Node Storage before update'
    required: false
    default: "true"
  BRANCH_OR_TAG_NAME:  
    description: 'Name of GitHub tag, branch, or release (Usually $GITHUB_REF_NAME)'
    required: true

runs:
  using: "composite"
  steps:
  - name: Set ENV Variables"
    shell: bash
    run: |
      echo "Running update-nodes Action"
      echo "S3_BUCKET_NAME=${{ inputs.S3_BUCKET_NAME }}" >> $GITHUB_ENV

  - name: Get Deployment ID
    shell: bash
    run: |
      echo "${{ inputs.BRANCH_OR_TAG_NAME }}" 
      echo "GITHUB_REF_NAME=${{ inputs.BRANCH_OR_TAG_NAME }}" >> $GITHUB_ENV

  - name: Snapshot All Running ZetaChain Instances
    if: ${{ inputs.TAKE_SNAPSHOTS == 'true' }}
    shell: bash
    run: |
      echo "Taking Snapshots of ZetaChain Instances"
      INSTANCE_IDS=$(aws ec2 describe-instances --filters "Name=tag:Role,Values=validator" "Name=instance-state-name,Values=running"| jq -r '.Reservations[].Instances[].InstanceId')
      while IFS= read -r INSTANCE_ID; do
          echo "$INSTANCE_ID"
          aws ec2 create-snapshots \
            --instance-specification InstanceId=$INSTANCE_ID,ExcludeBootVolume=true \
            --description "Snapshot Prior To Deployment ID: ${{ env.GITHUB_REF_NAME }}" \
            --copy-tags-from-source "volume" > jq
      done <<< "$INSTANCE_IDS"
      sleep 2

  - name: Copy Package Files
    shell: bash
    run: |
      echo "Copying Package Files from S3 to local node storage"
      source ${{ github.action_path }}/functions
      COMMAND_ID=$(run_ssm_cmds_validators    "mkdir -p /deployment-files/${{ env.GITHUB_REF_NAME }} && wget https://${{ env.S3_BUCKET_NAME }}.s3.amazonaws.com/${{ env.GITHUB_REF_NAME }}/zetacored -O /deployment-files/${{ env.GITHUB_REF_NAME }}/zetacored && wget https://${{ env.S3_BUCKET_NAME }}.s3.amazonaws.com/${{ env.GITHUB_REF_NAME }}/zetaclientd -O /deployment-files/${{ env.GITHUB_REF_NAME }}/zetaclientd")
      check_cmd_status $COMMAND_ID
      COMMAND_ID=$(run_ssm_cmds_api_nodes     "mkdir -p /deployment-files/${{ env.GITHUB_REF_NAME }} && wget https://${{ env.S3_BUCKET_NAME }}.s3.amazonaws.com/${{ env.GITHUB_REF_NAME }}/zetacored -O /deployment-files/${{ env.GITHUB_REF_NAME }}/zetacored")
      check_cmd_status $COMMAND_ID
      COMMAND_ID=$(run_ssm_cmds_archive_nodes "mkdir -p /deployment-files/${{ env.GITHUB_REF_NAME }} && wget https://${{ env.S3_BUCKET_NAME }}.s3.amazonaws.com/${{ env.GITHUB_REF_NAME }}/zetacored -O /deployment-files/${{ env.GITHUB_REF_NAME }}/zetacored")
      check_cmd_status $COMMAND_ID

  - name: Stop ZetaChain
    shell: bash
    run: |
      echo "Stopping ZetaChain"
      source ${{ github.action_path }}/functions
      COMMAND_ID=$(run_ssm_cmds_validators "systemctl stop zetaclientd && systemctl stop cosmovisor")
      check_cmd_status $COMMAND_ID
      COMMAND_ID=$(run_ssm_cmds_api_nodes "systemctl stop cosmovisor")
      check_cmd_status $COMMAND_ID
      COMMAND_ID=$(run_ssm_cmds_archive_nodes "systemctl stop cosmovisor")
      check_cmd_status $COMMAND_ID

  - name: Update ZetaNode Binaries
    shell: bash
    run: |
      echo "Updating ZetaNode Binaries"
      source ${{ github.action_path }}/functions
      COMMAND_ID=$(run_ssm_cmds_validators "\
          cp /deployment-files/${{ env.GITHUB_REF_NAME }}/zetaclientd /home/zetachain/.zetacored/cosmovisor/current/bin/zetaclientd && \
          cp /deployment-files/${{ env.GITHUB_REF_NAME }}/zetacored /home/zetachain/.zetacored/cosmovisor/current/bin/zetacored")
      check_cmd_status $COMMAND_ID

      COMMAND_ID=$(run_ssm_cmds_api_nodes "\
          cp /deployment-files/${{ env.GITHUB_REF_NAME }}/zetacored /home/zetachain/.zetacored/cosmovisor/current/bin/zetacored")
          check_cmd_status $COMMAND_ID

      COMMAND_ID=$(run_ssm_cmds_archive_nodes "\
          cp /deployment-files/${{ env.GITHUB_REF_NAME }}/zetacored /home/zetachain/.zetacored/cosmovisor/current/bin/zetacored")
          check_cmd_status $COMMAND_ID

  - name: Restart ZetaChain
    shell: bash
    run: |
      echo "Restarting ZetaChain"
      source ${{ github.action_path }}/functions
      COMMAND_ID=$(run_ssm_cmds_validators "systemctl restart cosmovisor && systemctl restart zetaclientd")
      check_cmd_status $COMMAND_ID
      COMMAND_ID=$(run_ssm_cmds_api_nodes "systemctl restart cosmovisor")
      check_cmd_status $COMMAND_ID
      COMMAND_ID=$(run_ssm_cmds_archive_nodes "systemctl restart cosmovisor")
      check_cmd_status $COMMAND_ID
