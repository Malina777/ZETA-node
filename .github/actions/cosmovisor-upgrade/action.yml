name: 'Create Cosmovisor Release Package'
description: 'Does cosmovisor stuff '
inputs:
  RELEASE_NAME:  
    description: 'Name of GitHub tag or release (Usually $GITHUB_REF_NAME)'
    required: true
  VERSION:  
    description: 'Version number for the release (0.0.1)'
    required: true
  DESCRIPTION:  
    description: 'Description of the upgrade'
    required: false
    default: "Description"
  S3_BUCKET_NAME:  
    description: 'S3 Bucket Name'
    required: true
  CHECKSUM_ZETACORED:  
    description: 'Hash value of the zetacored binary'
    required: false
    default: ""
  CHECKSUM_ZETACLIENTD:  
    description: 'Hash value of the zetaclientd binary'
    required: false
    default: ""
  CHAIN_ID:  
    description: 'Chain ID for the upgrade'
    required: false
    default: "athens-1"
  API_ENDPOINT:  
    description: 'Endpoint to query the active ZetaChain API'
    required: false
    default: "https://api.staging.zetachain.com"
runs:
  using: "composite"
  steps:
    - name: Set ENV Variables
      run: |
        echo Running Cosmovisor Upgrade Action
        echo "RELEASE_NAME=${{ inputs.RELEASE_NAME }}" >> $GITHUB_ENV
        echo "VERSION=${{ inputs.VERSION }}" >> $GITHUB_ENV
        echo "DESCRIPTION=${{ inputs.DESCRIPTION }}" >> $GITHUB_ENV
        echo "S3_BUCKET_NAME=${{ inputs.S3_BUCKET_NAME }}" >> $GITHUB_ENV
        echo "CHECKSUM_ZETACORED=${{ inputs.CHECKSUM_ZETACORED }}" >> $GITHUB_ENV
        echo "CHECKSUM_ZETACLIENTD=${{ inputs.CHECKSUM_ZETACLIENTD }}" >> $GITHUB_ENV

        echo PATH="$PATH:$(pwd)" >> $GITHUB_ENV

      shell: bash

    # - name: init account # Probably can skp this and run via SSM instead 
    #   run: |
    #     ls
    #     ./zetacored init "$CHAIN_ID" --chain-id="$CHAIN_ID" -o 
    #     ./zetacored config keyring-backend default
    #     PROPOSER_ACCOUNT_MEMONIC=${{ secrets.PROPOSER_ACCOUNT_MEMONIC }}
    #     echo "$PROPOSER_ACCOUNT_MEMONIC" | ./zetacored keys add proposer --recover --keyring-backend=default
    #     PROPOSER_ADDR=$(zetacored keys show proposal -a)
    #     ./zetacored keys show proposal -a
    #   shell: bash


    - name: Get Upgrade Height 
      run: |
        echo "Current Height + 1000 blocks?"
        UPGRADE_HEIGHT=1000
        echo "UPGRADE_HEIGHT=$UPGRADE_HEIGHT" >> $GITHUB_ENV

      shell: bash

    - name: Create & Submit Proposal 
      run: |
        BUCKET_PATH="https://$S3_BUCKET_NAME.s3.us-east-1.amazonaws.com/$RELEASE_NAME"
        echo $BUCKET_PATH
        zetacored tx gov submit-proposal software-upgrade $VERSION \
          --from zeta \
          --deposit 10000000000000000000stake \
          --upgrade-height $UPGRADE_HEIGHT \
          --upgrade-info '{"binaries":{"linux/arm64":"$BUCKET_PATH/zetaclientd","linux/amd64":"$BUCKET_PATH/zetacored"}}' \
          --description "$DESCRIPTION" \
          --title "$RELEASE_NAME" \
          --from zeta \
          --keyring-backend test \
          --chain-id "$CHAIN_ID" \
          --yes
      shell: bash

    - name: Vote on Proposal (All Validator Nodes)
      run: |
        echo PLACEHOLDER 
        # sleep 10
        # zetacored tx gov vote 1 yes --from zeta --keyring-backend test --chain-id localnet --yes
        # clear
        # sleep 10
        # zetacored query gov proposal 1
        # tail -f zetanode.log
      shell: bash


