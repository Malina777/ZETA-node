name: "TESTING:ADVANCED:E2E"

on:
  workflow_dispatch:
    inputs:
      e2e-admin-tests:
        type: boolean
        required: false
        default: false
      e2e-upgrade-test:
        type: boolean
        required: false
        default: false
      e2e-performance-test:
        type: boolean
        required: false
        default: false
      e2e-upgrade-test-light:
        type: boolean
        required: false
        default: false

jobs:
  e2e-admin-tests:
    if: ${{ github.event.inputs.e2e-admin-tests == 'true' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 120
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      - name: Execute e2e-admin-tests
        shell: bash
        run: |
          make start-e2e-admin-test
          
          # Find the container ID of the orchestrator container by its image name
          container_id=$(docker ps --filter "ancestor=orchestrator:latest" --format "{{.ID}}")
          
          if [ -z "$container_id" ]; then
              echo "Orchestrator container is not currently running. Exiting..."
              exit 1
          fi
          
          echo "Monitoring Orchestrator container with ID: $container_id"
          while true; do
              echo "get current status"
              current_status=$(docker ps -q | grep $container_id || echo "docker-ps-error")
              echo "current status: ${current_status}"
              if [ "$current_status" == "docker-ps-error" ]; then
                  echo "no current container get logs"
                  docker logs $container_id || echo "no logs"
                  echo "-----------------------------------"
                  exit 0
              else
                  echo "Orchestrator container is still running..."
                  docker logs $container_id || echo "no logs"
              fi
              sleep 5
          done

  e2e-upgrade-test:
    if: ${{ github.event.inputs.e2e-upgrade-test == 'true' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 120
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      - name: Execute upgrade-test
        shell: bash
        run: |
          make start-upgrade-test
          
          # Find the container ID of the orchestrator container by its image name
          container_id=$(docker ps --filter "ancestor=orchestrator:latest" --format "{{.ID}}")
          
          if [ -z "$container_id" ]; then
              echo "Orchestrator container is not currently running. Exiting..."
              exit 1
          fi
          
          echo "Monitoring Orchestrator container with ID: $container_id"
          while true; do
              echo "get current status"
              current_status=$(docker ps -q | grep $container_id || echo "docker-ps-error")
              echo "current status: ${current_status}"
              if [ "$current_status" == "docker-ps-error" ]; then
                  echo "no current container get logs"
                  docker logs $container_id || echo "no logs"
                  echo "-----------------------------------"
                  exit 0
              else
                  echo "Orchestrator container is still running..."
                  docker logs $container_id || echo "no logs"
              fi
              sleep 5
          done

  e2e-upgrade-test-light:
    if: ${{ github.event.inputs.e2e-upgrade-test-light == 'true' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 120
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      - name: Execute upgrade-test-light
        shell: bash
        run: |
          make start-upgrade-test-light
          
          # Find the container ID of the orchestrator container by its image name
          container_id=$(docker ps --filter "ancestor=orchestrator:latest" --format "{{.ID}}")
          
          if [ -z "$container_id" ]; then
              echo "Orchestrator container is not currently running. Exiting..."
              exit 1
          fi
          
          echo "Monitoring Orchestrator container with ID: $container_id"
          while true; do
              echo "get current status"
              current_status=$(docker ps -q | grep $container_id || echo "docker-ps-error")
              echo "current status: ${current_status}"
              if [ "$current_status" == "docker-ps-error" ]; then
                  echo "no current container get logs"
                  docker logs $container_id || echo "no logs"
                  echo "-----------------------------------"
                  exit 0
              else
                  echo "Orchestrator container is still running..."
                  docker logs $container_id || echo "no logs"
              fi
              sleep 5
          done

  e2e-performance-test:
    if: ${{ github.event.inputs.e2e-performance-test == 'true' }}
    runs-on: buildjet-4vcpu-ubuntu-2204
    timeout-minutes: 120
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      - name: Execute Performance Tests
        shell: bash
        run: |
          make start-e2e-performance-test
          
          # Find the container ID of the orchestrator container by its image name
          container_id=$(docker ps --filter "ancestor=orchestrator:latest" --format "{{.ID}}")
          
          if [ -z "$container_id" ]; then
              echo "Orchestrator container is not currently running. Exiting..."
              exit 1
          fi
          
          echo "Monitoring Orchestrator container with ID: $container_id"
          while true; do
              echo "get current status"
              current_status=$(docker ps -q | grep $container_id || echo "docker-ps-error")
              echo "current status: ${current_status}"
              if [ "$current_status" == "docker-ps-error" ]; then
                  echo "no current container get logs"
                  docker logs $container_id || echo "no logs"
                  echo "-----------------------------------"
                  exit 0
              else
                  echo "Orchestrator container is still running..."
                  docker logs $container_id || echo "no logs"
              fi
              sleep 5
          done