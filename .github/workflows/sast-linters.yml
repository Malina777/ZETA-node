name: Linters and SAST
on:
  push:
    tags:
      - "*"
    branches:
      - highlight_nosec_use
  pull_request:
    types:
      - opened
      - edited
      - synchronize

concurrency:
  group: linters-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      # - name: Install Pipeline Dependencies
      #   uses:  ./.github/actions/install-dependencies

      - name: Run Gosec Security Scanner
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec ./...

  git-guardian:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        # with:
        #   ref: ${{ github.event.pull_request.head.sha }} # Check out the PR head

      # - name: Install Pipeline Dependencies
      #   uses:  ./.github/actions/install-dependencies

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3

        with:
          version: v1.50
          skip-cache: false

      - name: Report nosec usage
        id: getfile
        run: |
          echo "Getting list of changed go files..."
          # files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '*.go')
          files=$(git diff --name-only '*.go')
          echo "Changed files: $files"
          echo "Changed go files: $files" >> $GITHUB_ENV
          echo "::set-output name=files::$files"
          echo "Getting list of nosec occurences"
          nosec_list=$(grep -nHo -i "#nosec" $(echo $files) | sed 's/\(.*\):\(.*\):\(.*\)/line: \2 \tfilename: \1/')

        # - name: Report nosec use
        # uses: mshick/add-pr-comment@v2
        #   with:
        #     message: