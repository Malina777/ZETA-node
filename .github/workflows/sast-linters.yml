name: Linters and SAST
on:
  push:
    tags:
      - "*"
    branches:
      - develop
      - highlight_nosec_use
  pull_request:
    types:
      - opened
      - edited
      - synchronize

concurrency:
  group: linters-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      # - name: Install Pipeline Dependencies
      #   uses:  ./.github/actions/install-dependencies

      - name: Run Gosec Security Scanner
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec ./...

  git-guardian:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Install Pipeline Dependencies
      #   uses:  ./.github/actions/install-dependencies

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50
          skip-cache: false

      - name: Getting files updated in the PR
        id: changed-files-specific
        uses: tj-actions/changed-files@v39
        # with:
        #   files: '*.go'

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Report nosec usage
        run: |
          declare -A nosec_list
          # echo "Getting list of files that have been updated in the PR..."
          # diff_file_list=$(git diff e4329f55a6874d3f0ff805b998818816c4a83bdf ${{ github.sha }} --name-only -- '*.go')
          
          echo "Changed files: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
          # echo "Changed go files: $files" >> $GITHUB_ENV
          # echo "::set-output name=files::$files"

          echo "Getting list of nosec occurences"
          for file in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
            temp=$(git diff -U0 $file | grep -v '^diff\|^---\|^+++\|^index' | sed 's/^@@/^/' | tr "\n" " ")
            IFS='^'
            read -ra my_array <<< "$temp"
            for line in "${my_array[@]}"; do
              if [ ! -z $line ] && [[ $line =~ "#nosec" ]]; then
                line=$(echo $line | awk '{split($2, a, ","); print a[1]}' | sed 's/+/ /')
                nosec_list["$file"]="$line"
              fi
            done
          done
          
          for file in "${!nosec_list[@]}"; do
            echo -e "Line: ${nosec_list[$file]}\tFile: $file"
          done

        # - name: Report nosec uses
        # uses: mshick/add-pr-comment@v2
        #   with:
        #     message: