name: Linters and SAST
on:
  push:
    tags:
      - "*"
    branches:
      - highlight_nosec_use
      - highlight_nosec_use_fix
  # pull_request:
  #   types:
  #     - opened
  #     - edited
  #     - synchronize

concurrency:
  group: linters-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # gosec:
  #   runs-on: ubuntu-latest
  #   env:
  #     GO111MODULE: on
  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.19

  #     # - name: Install Pipeline Dependencies
  #     #   uses:  ./.github/actions/install-dependencies

  #     - name: Run Gosec Security Scanner
  #       run: |
  #         export PATH=$PATH:$(go env GOPATH)/bin
  #         go install github.com/securego/gosec/v2/cmd/gosec@latest
  #         gosec ./...

  # git-guardian:
  #   runs-on: ubuntu-latest
  #   env:
  #     GO111MODULE: on
  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: GitGuardian scan
  #       uses: GitGuardian/ggshield-action@master
  #       env:
  #         GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
  #         GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
  #         GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
  #         GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  #         GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  # lint:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   env:
  #     GO111MODULE: on
  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
          
  #     - name: Install Pipeline Dependencies
  #       uses:  ./.github/actions/install-dependencies

  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.19

  #     - name: Run golangci-lint
  #       uses: golangci/golangci-lint-action@v3
  #       with:
  #         version: v1.50
  #         skip-cache: true
  #         args: --timeout=15m

  nosec_alert:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # nosec
      # - name: Get branch name
      #   id: branch-name
      #   uses: tj-actions/branch-names@v6

      - uses: nrwl/nx-set-shas@v3
        id: set_shas
        with:
          main-branch-name: ${{ steps.branch-name.outputs.current_branch }} # Get the last successful commit for the current branch.
          workflow-id: 'test.yml'

      - name: Getting files updated in the PR
        id: changed-files
        uses: tj-actions/changed-files@v39
        # with:
          # base_sha: ${{ steps.last_successful_commit_push.outputs.base }}
          # base_sha: e4329f55a6874d3f0ff805b998818816c4a83bdf
          # files: .**/*.go

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Report nosec usage
        run: |
          nosec_list=()
      
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

          echo "Getting list of nosec occurences"
          
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do

            # nosec_detected=$(git diff ${{ github.event.pull_request.base.ref }} $file | grep -q nosec)
            nosec_detected=$(git diff e4329f55a6874d3f0ff805b998818816c4a83bdf $file | grep -q nosec)

            if [ $? -eq 0 ]; then
              echo "nosec detected in $file"
              nosec_list+=("$file")
            fi
          done
          
          for file in "${nosec_list[@]}"; do
            echo "$file"
          done

          echo "::set-output name=nosec_fules::$nosec_list"
          
        # - name: Report nosec uses
        # uses: mshick/add-pr-comment@v2
        #   with:
        #     message: |
        #       ## nosec uses
        #       ${{ steps.nosec.outputs.nosec_list }}
