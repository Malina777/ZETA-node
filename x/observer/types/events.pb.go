// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: observer/events.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EventBallotCreated struct {
	MsgTypeUrl       string `protobuf:"bytes,1,opt,name=msg_type_url,json=msgTypeUrl,proto3" json:"msg_type_url,omitempty"`
	BallotIdentifier string `protobuf:"bytes,3,opt,name=ballot_identifier,json=ballotIdentifier,proto3" json:"ballot_identifier,omitempty"`
	ObservationHash  string `protobuf:"bytes,4,opt,name=observation_hash,json=observationHash,proto3" json:"observation_hash,omitempty"`
	ObservationChain string `protobuf:"bytes,5,opt,name=observation_chain,json=observationChain,proto3" json:"observation_chain,omitempty"`
	BallotType       string `protobuf:"bytes,6,opt,name=ballot_type,json=ballotType,proto3" json:"ballot_type,omitempty"`
}

func (m *EventBallotCreated) Reset()         { *m = EventBallotCreated{} }
func (m *EventBallotCreated) String() string { return proto.CompactTextString(m) }
func (*EventBallotCreated) ProtoMessage()    {}
func (*EventBallotCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f1ca57368474456, []int{0}
}
func (m *EventBallotCreated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EventBallotCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EventBallotCreated.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EventBallotCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventBallotCreated.Merge(m, src)
}
func (m *EventBallotCreated) XXX_Size() int {
	return m.Size()
}
func (m *EventBallotCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_EventBallotCreated.DiscardUnknown(m)
}

var xxx_messageInfo_EventBallotCreated proto.InternalMessageInfo

func (m *EventBallotCreated) GetMsgTypeUrl() string {
	if m != nil {
		return m.MsgTypeUrl
	}
	return ""
}

func (m *EventBallotCreated) GetBallotIdentifier() string {
	if m != nil {
		return m.BallotIdentifier
	}
	return ""
}

func (m *EventBallotCreated) GetObservationHash() string {
	if m != nil {
		return m.ObservationHash
	}
	return ""
}

func (m *EventBallotCreated) GetObservationChain() string {
	if m != nil {
		return m.ObservationChain
	}
	return ""
}

func (m *EventBallotCreated) GetBallotType() string {
	if m != nil {
		return m.BallotType
	}
	return ""
}

func init() {
	proto.RegisterType((*EventBallotCreated)(nil), "zetachain.zetacore.observer.EventBallotCreated")
}

func init() { proto.RegisterFile("observer/events.proto", fileDescriptor_1f1ca57368474456) }

var fileDescriptor_1f1ca57368474456 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x50, 0xc1, 0x4a, 0xf4, 0x30,
	0x18, 0x6c, 0xf8, 0x7f, 0x17, 0x8c, 0x82, 0x6b, 0x50, 0x2c, 0x2b, 0xc4, 0xc5, 0x93, 0x22, 0x36,
	0x07, 0xdf, 0x60, 0x17, 0xc1, 0xbd, 0x8a, 0x5e, 0xbc, 0x94, 0x74, 0xf7, 0xb3, 0x09, 0xb4, 0x4d,
	0x49, 0xb2, 0x8b, 0xeb, 0x53, 0xf8, 0x58, 0x1e, 0xf7, 0xe8, 0xc1, 0x83, 0xb4, 0x2f, 0x22, 0x49,
	0x6c, 0xe9, 0x6d, 0x98, 0x99, 0xcc, 0x37, 0x19, 0x7c, 0xaa, 0x32, 0x03, 0x7a, 0x03, 0x9a, 0xc1,
	0x06, 0x2a, 0x6b, 0x92, 0x5a, 0x2b, 0xab, 0xc8, 0xf9, 0x3b, 0x58, 0xbe, 0x14, 0x5c, 0x56, 0x89,
	0x47, 0x4a, 0x43, 0xd2, 0x39, 0x27, 0x27, 0xb9, 0xca, 0x95, 0xf7, 0x31, 0x87, 0xc2, 0x93, 0xc9,
	0x59, 0x9f, 0xd4, 0x81, 0x20, 0x5c, 0x7e, 0x23, 0x4c, 0xee, 0x5d, 0xf8, 0x8c, 0x17, 0x85, 0xb2,
	0x73, 0x0d, 0xdc, 0xc2, 0x8a, 0x4c, 0xf1, 0x61, 0x69, 0xf2, 0xd4, 0x6e, 0x6b, 0x48, 0xd7, 0xba,
	0x88, 0xd1, 0x14, 0x5d, 0xed, 0x3f, 0xe2, 0xd2, 0xe4, 0x4f, 0xdb, 0x1a, 0x9e, 0x75, 0x41, 0x6e,
	0xf0, 0x71, 0xe6, 0x9f, 0xa4, 0x72, 0x05, 0x95, 0x95, 0xaf, 0x12, 0x74, 0xfc, 0xcf, 0xdb, 0xc6,
	0x41, 0x58, 0xf4, 0x3c, 0xb9, 0xc6, 0xe3, 0x70, 0x97, 0x5b, 0xa9, 0xaa, 0x54, 0x70, 0x23, 0xe2,
	0xff, 0xde, 0x7b, 0x34, 0xe0, 0x1f, 0xb8, 0x11, 0x2e, 0x77, 0x68, 0xf5, 0xdf, 0x8c, 0xf7, 0x42,
	0xee, 0x40, 0x98, 0x3b, 0x9e, 0x5c, 0xe0, 0x83, 0xbf, 0x12, 0xae, 0x69, 0x3c, 0x0a, 0x2d, 0x03,
	0xe5, 0x8a, 0xce, 0x16, 0x9f, 0x0d, 0x45, 0xbb, 0x86, 0xa2, 0x9f, 0x86, 0xa2, 0x8f, 0x96, 0x46,
	0xbb, 0x96, 0x46, 0x5f, 0x2d, 0x8d, 0x5e, 0x58, 0x2e, 0xad, 0x58, 0x67, 0xc9, 0x52, 0x95, 0xcc,
	0xad, 0x78, 0xeb, 0x2f, 0xb1, 0x6e, 0x50, 0xf6, 0xd6, 0x2f, 0xc5, 0x5c, 0xb6, 0xc9, 0x46, 0x7e,
	0xb0, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xe0, 0x75, 0x9f, 0x95, 0x01, 0x00, 0x00,
}

func (m *EventBallotCreated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EventBallotCreated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EventBallotCreated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BallotType) > 0 {
		i -= len(m.BallotType)
		copy(dAtA[i:], m.BallotType)
		i = encodeVarintEvents(dAtA, i, uint64(len(m.BallotType)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ObservationChain) > 0 {
		i -= len(m.ObservationChain)
		copy(dAtA[i:], m.ObservationChain)
		i = encodeVarintEvents(dAtA, i, uint64(len(m.ObservationChain)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ObservationHash) > 0 {
		i -= len(m.ObservationHash)
		copy(dAtA[i:], m.ObservationHash)
		i = encodeVarintEvents(dAtA, i, uint64(len(m.ObservationHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BallotIdentifier) > 0 {
		i -= len(m.BallotIdentifier)
		copy(dAtA[i:], m.BallotIdentifier)
		i = encodeVarintEvents(dAtA, i, uint64(len(m.BallotIdentifier)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MsgTypeUrl) > 0 {
		i -= len(m.MsgTypeUrl)
		copy(dAtA[i:], m.MsgTypeUrl)
		i = encodeVarintEvents(dAtA, i, uint64(len(m.MsgTypeUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintEvents(dAtA []byte, offset int, v uint64) int {
	offset -= sovEvents(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EventBallotCreated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MsgTypeUrl)
	if l > 0 {
		n += 1 + l + sovEvents(uint64(l))
	}
	l = len(m.BallotIdentifier)
	if l > 0 {
		n += 1 + l + sovEvents(uint64(l))
	}
	l = len(m.ObservationHash)
	if l > 0 {
		n += 1 + l + sovEvents(uint64(l))
	}
	l = len(m.ObservationChain)
	if l > 0 {
		n += 1 + l + sovEvents(uint64(l))
	}
	l = len(m.BallotType)
	if l > 0 {
		n += 1 + l + sovEvents(uint64(l))
	}
	return n
}

func sovEvents(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEvents(x uint64) (n int) {
	return sovEvents(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EventBallotCreated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EventBallotCreated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EventBallotCreated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgTypeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgTypeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BallotIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BallotIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservationHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObservationHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservationChain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObservationChain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BallotType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BallotType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEvents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEvents(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEvents
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvents
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEvents
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEvents
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEvents
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEvents        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEvents          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEvents = fmt.Errorf("proto: unexpected end of group")
)
