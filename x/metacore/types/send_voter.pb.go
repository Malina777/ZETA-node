// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metacore/send_voter.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SendVoter struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index           string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Sender          string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	SenderChainId   string `protobuf:"bytes,4,opt,name=senderChainId,proto3" json:"senderChainId,omitempty"`
	Receiver        string `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverChainId string `protobuf:"bytes,6,opt,name=receiverChainId,proto3" json:"receiverChainId,omitempty"`
	MBurnt          string `protobuf:"bytes,7,opt,name=mBurnt,proto3" json:"mBurnt,omitempty"`
	Message         string `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	TxHash          string `protobuf:"bytes,9,opt,name=txHash,proto3" json:"txHash,omitempty"`
	BlockHeight     uint64 `protobuf:"varint,10,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
}

func (m *SendVoter) Reset()         { *m = SendVoter{} }
func (m *SendVoter) String() string { return proto.CompactTextString(m) }
func (*SendVoter) ProtoMessage()    {}
func (*SendVoter) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9c5db79f86b93e7, []int{0}
}
func (m *SendVoter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendVoter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendVoter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendVoter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendVoter.Merge(m, src)
}
func (m *SendVoter) XXX_Size() int {
	return m.Size()
}
func (m *SendVoter) XXX_DiscardUnknown() {
	xxx_messageInfo_SendVoter.DiscardUnknown(m)
}

var xxx_messageInfo_SendVoter proto.InternalMessageInfo

func (m *SendVoter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *SendVoter) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *SendVoter) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SendVoter) GetSenderChainId() string {
	if m != nil {
		return m.SenderChainId
	}
	return ""
}

func (m *SendVoter) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *SendVoter) GetReceiverChainId() string {
	if m != nil {
		return m.ReceiverChainId
	}
	return ""
}

func (m *SendVoter) GetMBurnt() string {
	if m != nil {
		return m.MBurnt
	}
	return ""
}

func (m *SendVoter) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SendVoter) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *SendVoter) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*SendVoter)(nil), "MetaProtocol.metacore.metacore.SendVoter")
}

func init() { proto.RegisterFile("metacore/send_voter.proto", fileDescriptor_c9c5db79f86b93e7) }

var fileDescriptor_c9c5db79f86b93e7 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x3b, 0xb5, 0xbf, 0x23, 0x22, 0x0c, 0x45, 0xc6, 0x2e, 0x86, 0x22, 0x2e, 0xb2, 0x31,
	0x01, 0x7d, 0x83, 0xba, 0xa9, 0xa0, 0x20, 0x15, 0x5c, 0xb8, 0x91, 0xc9, 0xe4, 0x92, 0x04, 0x9b,
	0x4c, 0x99, 0x4c, 0x4b, 0x7c, 0x0b, 0xdf, 0xc3, 0x17, 0x71, 0xd9, 0xa5, 0x4b, 0x49, 0x5e, 0x44,
	0x66, 0xa6, 0x89, 0x3f, 0xbb, 0xf3, 0x9d, 0x39, 0x77, 0xb8, 0x97, 0x83, 0x4f, 0x33, 0xd0, 0x5c,
	0x48, 0x05, 0x41, 0x01, 0x79, 0xf4, 0xbc, 0x95, 0x1a, 0x94, 0xbf, 0x56, 0x52, 0x4b, 0xc2, 0xee,
	0x40, 0xf3, 0x7b, 0x23, 0x85, 0x5c, 0xf9, 0x4d, 0xae, 0x15, 0xd3, 0x49, 0x2c, 0x63, 0x69, 0xa3,
	0x81, 0x51, 0x6e, 0xea, 0xec, 0xbd, 0x8b, 0xc7, 0x0f, 0x90, 0x47, 0x8f, 0xe6, 0x27, 0x42, 0xf1,
	0x50, 0x28, 0xe0, 0x5a, 0x2a, 0x8a, 0x66, 0xc8, 0x1b, 0x2f, 0x1b, 0x24, 0x13, 0xdc, 0x4f, 0xf3,
	0x08, 0x4a, 0xda, 0xb5, 0xbe, 0x03, 0x72, 0x82, 0x07, 0x66, 0x0f, 0x50, 0xf4, 0xc0, 0xda, 0x7b,
	0x22, 0xe7, 0xf8, 0xc8, 0xa9, 0xeb, 0x84, 0xa7, 0xf9, 0x4d, 0x44, 0x7b, 0xf6, 0xf9, 0xaf, 0x49,
	0xa6, 0x78, 0xa4, 0x40, 0x40, 0xba, 0x05, 0x45, 0xfb, 0x36, 0xd0, 0x32, 0xf1, 0xf0, 0x71, 0xa3,
	0x9b, 0x3f, 0x06, 0x36, 0xf2, 0xdf, 0x36, 0x3b, 0x64, 0xf3, 0x8d, 0xca, 0x35, 0x1d, 0xba, 0x1d,
	0x1c, 0x99, 0x5b, 0x32, 0x28, 0x0a, 0x1e, 0x03, 0x1d, 0xb9, 0x5b, 0xf6, 0x68, 0x26, 0x74, 0xb9,
	0xe0, 0x45, 0x42, 0xc7, 0x6e, 0xc2, 0x11, 0x99, 0xe1, 0xc3, 0x70, 0x25, 0xc5, 0xcb, 0x02, 0xd2,
	0x38, 0xd1, 0x14, 0xcf, 0x90, 0xd7, 0x5b, 0xfe, 0xb6, 0xe6, 0xb7, 0x1f, 0x15, 0x43, 0xbb, 0x8a,
	0xa1, 0xaf, 0x8a, 0xa1, 0xb7, 0x9a, 0x75, 0x76, 0x35, 0xeb, 0x7c, 0xd6, 0xac, 0xf3, 0x74, 0x19,
	0xa7, 0x3a, 0xd9, 0x84, 0xbe, 0x90, 0x59, 0x60, 0x8a, 0xb8, 0x68, 0x9a, 0x08, 0xda, 0xc6, 0xca,
	0x1f, 0xa9, 0x5f, 0xd7, 0x50, 0x84, 0x03, 0x5b, 0xc1, 0xd5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x53, 0x20, 0x2b, 0x42, 0xd5, 0x01, 0x00, 0x00,
}

func (m *SendVoter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendVoter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendVoter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BlockHeight != 0 {
		i = encodeVarintSendVoter(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x50
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.MBurnt) > 0 {
		i -= len(m.MBurnt)
		copy(dAtA[i:], m.MBurnt)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.MBurnt)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ReceiverChainId) > 0 {
		i -= len(m.ReceiverChainId)
		copy(dAtA[i:], m.ReceiverChainId)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.ReceiverChainId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SenderChainId) > 0 {
		i -= len(m.SenderChainId)
		copy(dAtA[i:], m.SenderChainId)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.SenderChainId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintSendVoter(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSendVoter(dAtA []byte, offset int, v uint64) int {
	offset -= sovSendVoter(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SendVoter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.SenderChainId)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.ReceiverChainId)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.MBurnt)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovSendVoter(uint64(l))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovSendVoter(uint64(m.BlockHeight))
	}
	return n
}

func sovSendVoter(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSendVoter(x uint64) (n int) {
	return sovSendVoter(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SendVoter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSendVoter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendVoter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendVoter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReceiverChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MBurnt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MBurnt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSendVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSendVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSendVoter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSendVoter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSendVoter(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSendVoter
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSendVoter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSendVoter
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSendVoter
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSendVoter
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSendVoter        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSendVoter          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSendVoter = fmt.Errorf("proto: unexpected end of group")
)
