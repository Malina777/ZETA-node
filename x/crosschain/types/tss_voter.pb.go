// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: crosschain/tss_voter.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TSSVoter struct {
	Creator         string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index           string   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Chain           string   `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
	Address         string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Pubkey          string   `protobuf:"bytes,5,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Signers         []string `protobuf:"bytes,6,rep,name=signers,proto3" json:"signers,omitempty"`
	FinalizedHeight uint64   `protobuf:"varint,7,opt,name=finalizedHeight,proto3" json:"finalizedHeight,omitempty"`
}

func (m *TSSVoter) Reset()         { *m = TSSVoter{} }
func (m *TSSVoter) String() string { return proto.CompactTextString(m) }
func (*TSSVoter) ProtoMessage()    {}
func (*TSSVoter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78ab18fa9692f61, []int{0}
}
func (m *TSSVoter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TSSVoter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TSSVoter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TSSVoter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TSSVoter.Merge(m, src)
}
func (m *TSSVoter) XXX_Size() int {
	return m.Size()
}
func (m *TSSVoter) XXX_DiscardUnknown() {
	xxx_messageInfo_TSSVoter.DiscardUnknown(m)
}

var xxx_messageInfo_TSSVoter proto.InternalMessageInfo

func (m *TSSVoter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *TSSVoter) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *TSSVoter) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *TSSVoter) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TSSVoter) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *TSSVoter) GetSigners() []string {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *TSSVoter) GetFinalizedHeight() uint64 {
	if m != nil {
		return m.FinalizedHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*TSSVoter)(nil), "zetachain.zetacore.crosschain.TSSVoter")
}

func init() { proto.RegisterFile("crosschain/tss_voter.proto", fileDescriptor_e78ab18fa9692f61) }

var fileDescriptor_e78ab18fa9692f61 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4b, 0xc4, 0x30,
	0x18, 0x86, 0x1b, 0xef, 0xae, 0xa7, 0x59, 0x84, 0x20, 0x12, 0x04, 0x43, 0x71, 0xea, 0x62, 0x8b,
	0xf8, 0x0f, 0x9c, 0x04, 0xb7, 0x3b, 0x71, 0x70, 0x91, 0xb4, 0xfd, 0x6c, 0x83, 0xda, 0x94, 0x7c,
	0x39, 0xb9, 0xbb, 0x5f, 0xe1, 0xaf, 0x12, 0xc7, 0x1b, 0x1d, 0xa5, 0xfd, 0x23, 0x92, 0xb4, 0x45,
	0xb9, 0x2d, 0xcf, 0xfb, 0xe5, 0x7d, 0x87, 0x87, 0x9e, 0xe5, 0x46, 0x23, 0xe6, 0x95, 0x54, 0x75,
	0x6a, 0x11, 0x9f, 0xde, 0xb5, 0x05, 0x93, 0x34, 0x46, 0x5b, 0xcd, 0xce, 0xb7, 0x60, 0xa5, 0x3f,
	0x25, 0xfe, 0xa5, 0x0d, 0x24, 0x7f, 0xdf, 0x2f, 0x3e, 0x09, 0x3d, 0xbc, 0x5f, 0x2e, 0x1f, 0x5c,
	0x83, 0x71, 0x3a, 0xcf, 0x0d, 0x48, 0xab, 0x0d, 0x27, 0x11, 0x89, 0x8f, 0x16, 0x23, 0xb2, 0x13,
	0x3a, 0x53, 0x75, 0x01, 0x6b, 0x7e, 0xe0, 0xf3, 0x1e, 0x5c, 0xea, 0x57, 0xf8, 0xa4, 0x4f, 0x3d,
	0xb8, 0x15, 0x59, 0x14, 0x06, 0x10, 0xf9, 0xb4, 0x5f, 0x19, 0x90, 0x9d, 0xd2, 0xb0, 0x59, 0x65,
	0x2f, 0xb0, 0xe1, 0x33, 0x7f, 0x18, 0xc8, 0x35, 0x50, 0x95, 0x35, 0x18, 0xe4, 0x61, 0x34, 0x71,
	0x8d, 0x01, 0x59, 0x4c, 0x8f, 0x9f, 0x55, 0x2d, 0x5f, 0xd5, 0x16, 0x8a, 0x5b, 0x50, 0x65, 0x65,
	0xf9, 0x3c, 0x22, 0xf1, 0x74, 0xb1, 0x1f, 0xdf, 0xdc, 0x7d, 0xb5, 0x82, 0xec, 0x5a, 0x41, 0x7e,
	0x5a, 0x41, 0x3e, 0x3a, 0x11, 0xec, 0x3a, 0x11, 0x7c, 0x77, 0x22, 0x78, 0xbc, 0x2a, 0x95, 0xad,
	0x56, 0x59, 0x92, 0xeb, 0xb7, 0xd4, 0x29, 0xb8, 0xec, 0x45, 0x8d, 0x36, 0xd2, 0x75, 0xfa, 0x5f,
	0xdf, 0xa6, 0x01, 0xcc, 0x42, 0xef, 0xee, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x39, 0x09, 0x28,
	0x9d, 0x59, 0x01, 0x00, 0x00,
}

func (m *TSSVoter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TSSVoter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TSSVoter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FinalizedHeight != 0 {
		i = encodeVarintTssVoter(dAtA, i, uint64(m.FinalizedHeight))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Signers) > 0 {
		for iNdEx := len(m.Signers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Signers[iNdEx])
			copy(dAtA[i:], m.Signers[iNdEx])
			i = encodeVarintTssVoter(dAtA, i, uint64(len(m.Signers[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Pubkey) > 0 {
		i -= len(m.Pubkey)
		copy(dAtA[i:], m.Pubkey)
		i = encodeVarintTssVoter(dAtA, i, uint64(len(m.Pubkey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTssVoter(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTssVoter(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTssVoter(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTssVoter(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTssVoter(dAtA []byte, offset int, v uint64) int {
	offset -= sovTssVoter(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TSSVoter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTssVoter(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTssVoter(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTssVoter(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTssVoter(uint64(l))
	}
	l = len(m.Pubkey)
	if l > 0 {
		n += 1 + l + sovTssVoter(uint64(l))
	}
	if len(m.Signers) > 0 {
		for _, s := range m.Signers {
			l = len(s)
			n += 1 + l + sovTssVoter(uint64(l))
		}
	}
	if m.FinalizedHeight != 0 {
		n += 1 + sovTssVoter(uint64(m.FinalizedHeight))
	}
	return n
}

func sovTssVoter(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTssVoter(x uint64) (n int) {
	return sovTssVoter(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TSSVoter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTssVoter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TSSVoter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TSSVoter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pubkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssVoter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssVoter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signers = append(m.Signers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalizedHeight", wireType)
			}
			m.FinalizedHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FinalizedHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTssVoter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTssVoter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTssVoter(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTssVoter
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTssVoter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTssVoter
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTssVoter
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTssVoter
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTssVoter        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTssVoter          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTssVoter = fmt.Errorf("proto: unexpected end of group")
)
